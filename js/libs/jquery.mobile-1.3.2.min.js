(function (n, q, u) {
    "function" === typeof define && define.amd ? define(["jquery.1.9.1"], function (G) {
        u(G, n, q);
        return G.mobile
    }) : u(n.jQuery, n, q)
})(this, document, function (n, q, u, G) {
    n.mobile = {};
    (function (a, m, b) {
        var d = {};
        a.mobile = a.extend(a.mobile, {version: "1.3.2", ns: "", subPageUrlKey: "ui-page", activePageClass: "ui-page-active", activeBtnClass: "ui-btn-active", focusClass: "ui-focus", ajaxEnabled: !0, hashListeningEnabled: !0, linkBindingEnabled: !0, defaultPageTransition: "fade", maxTransitionWidth: !1, minScrollBack: 250, touchOverflowEnabled: !1,
            defaultDialogTransition: "pop", pageLoadErrorMessage: "Error Loading Page", pageLoadErrorMessageTheme: "e", phonegapNavigationEnabled: !1, autoInitializePage: !0, pushStateEnabled: !0, ignoreContentEnabled: !1, orientationChangeEnabled: !0, buttonMarkup: {hoverDelay: 200}, window: a(m), document: a(u), keyCode: {ALT: 18, BACKSPACE: 8, CAPS_LOCK: 20, COMMA: 188, COMMAND: 91, COMMAND_LEFT: 91, COMMAND_RIGHT: 93, CONTROL: 17, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, INSERT: 45, LEFT: 37, MENU: 93, NUMPAD_ADD: 107, NUMPAD_DECIMAL: 110, NUMPAD_DIVIDE: 111,
                NUMPAD_ENTER: 108, NUMPAD_MULTIPLY: 106, NUMPAD_SUBTRACT: 109, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SHIFT: 16, SPACE: 32, TAB: 9, UP: 38, WINDOWS: 91}, behaviors: {}, silentScroll: function (c) {
                "number" !== a.type(c) && (c = a.mobile.defaultHomeScroll);
                a.event.special.scrollstart.enabled = !1;
                setTimeout(function () {
                    m.scrollTo(0, c);
                    a.mobile.document.trigger("silentscroll", {x: 0, y: c})
                }, 20);
                setTimeout(function () {
                    a.event.special.scrollstart.enabled = !0
                }, 150)
            }, nsNormalizeDict: d, nsNormalize: function (c) {
                if (c)return d[c] || (d[c] =
                    a.camelCase(a.mobile.ns + c))
            }, getInheritedTheme: function (a, c) {
                for (var b = a[0], d = "", f = /ui-(bar|body|overlay)-([a-z])\b/, s, p; b && !((s = b.className || "") && (p = f.exec(s)) && (d = p[2]));)b = b.parentNode;
                return d || c || "a"
            }, closestPageData: function (a) {
                return a.closest(':jqmData(role="page"), :jqmData(role="dialog")').data("mobile-page")
            }, enhanceable: function (a) {
                return this.haveParents(a, "enhance")
            }, hijackable: function (a) {
                return this.haveParents(a, "ajax")
            }, haveParents: function (c, b) {
                if (!a.mobile.ignoreContentEnabled)return c;
                for (var d = c.length, f = a(), l, s, p, m = 0; m < d; m++) {
                    s = c.eq(m);
                    p = !1;
                    for (l = c[m]; l;) {
                        if ("false" === (l.getAttribute ? l.getAttribute("data-" + a.mobile.ns + b) : "")) {
                            p = !0;
                            break
                        }
                        l = l.parentNode
                    }
                    p || (f = f.add(s))
                }
                return f
            }, getScreenHeight: function () {
                return m.innerHeight || a.mobile.window.height()
            }}, a.mobile);
        a.fn.jqmData = function (c, d) {
            var f;
            "undefined" !== typeof c && (c && (c = a.mobile.nsNormalize(c)), f = 2 > arguments.length || d === b ? this.data(c) : this.data(c, d));
            return f
        };
        a.jqmData = function (c, b, d) {
            var f;
            "undefined" !== typeof b && (f = a.data(c,
                b ? a.mobile.nsNormalize(b) : b, d));
            return f
        };
        a.fn.jqmRemoveData = function (c) {
            return this.removeData(a.mobile.nsNormalize(c))
        };
        a.jqmRemoveData = function (c, b) {
            return a.removeData(c, a.mobile.nsNormalize(b))
        };
        a.fn.removeWithDependents = function () {
            a.removeWithDependents(this)
        };
        a.removeWithDependents = function (c) {
            c = a(c);
            (c.jqmData("dependents") || a()).remove();
            c.remove()
        };
        a.fn.addDependents = function (c) {
            a.addDependents(a(this), c)
        };
        a.addDependents = function (c, b) {
            var d = a(c).jqmData("dependents") || a();
            a(c).jqmData("dependents",
                a.merge(d, b))
        };
        a.fn.getEncodedText = function () {
            return a("<div/>").text(a(this).text()).html()
        };
        a.fn.jqmEnhanceable = function () {
            return a.mobile.enhanceable(this)
        };
        a.fn.jqmHijackable = function () {
            return a.mobile.hijackable(this)
        };
        var c = a.find, f = /:jqmData\(([^)]*)\)/g;
        a.find = function (b, d, h, k) {
            b = b.replace(f, "[data-" + (a.mobile.ns || "") + "$1]");
            return c.call(this, b, d, h, k)
        };
        a.extend(a.find, c);
        a.find.matches = function (c, b) {
            return a.find(c, null, null, b)
        };
        a.find.matchesSelector = function (c, b) {
            return 0 < a.find(b, null,
                null, [c]).length
        }
    })(n, this);
    (function (a, m) {
        var b = 0, d = Array.prototype.slice, c = a.cleanData;
        a.cleanData = function (b) {
            for (var d = 0, g; null != (g = b[d]); d++)try {
                a(g).triggerHandler("remove")
            } catch (h) {
            }
            c(b)
        };
        a.widget = function (c, b, d) {
            var h, k, l, s, p = c.split(".")[0];
            c = c.split(".")[1];
            h = p + "-" + c;
            d || (d = b, b = a.Widget);
            a.expr[":"][h.toLowerCase()] = function (c) {
                return!!a.data(c, h)
            };
            a[p] = a[p] || {};
            k = a[p][c];
            l = a[p][c] = function (a, c) {
                if (!this._createWidget)return new l(a, c);
                arguments.length && this._createWidget(a, c)
            };
            a.extend(l,
                k, {version: d.version, _proto: a.extend({}, d), _childConstructors: []});
            s = new b;
            s.options = a.widget.extend({}, s.options);
            a.each(d, function (c, f) {
                a.isFunction(f) && (d[c] = function () {
                    var a = function () {
                        return b.prototype[c].apply(this, arguments)
                    }, d = function (a) {
                        return b.prototype[c].apply(this, a)
                    };
                    return function () {
                        var c = this._super, b = this._superApply, e;
                        this._super = a;
                        this._superApply = d;
                        e = f.apply(this, arguments);
                        this._super = c;
                        this._superApply = b;
                        return e
                    }
                }())
            });
            l.prototype = a.widget.extend(s, {widgetEventPrefix: k ?
                s.widgetEventPrefix : c}, d, {constructor: l, namespace: p, widgetName: c, widgetFullName: h});
            k ? (a.each(k._childConstructors, function (c, b) {
                var d = b.prototype;
                a.widget(d.namespace + "." + d.widgetName, l, b._proto)
            }), delete k._childConstructors) : b._childConstructors.push(l);
            a.widget.bridge(c, l)
        };
        a.widget.extend = function (c) {
            for (var b = d.call(arguments, 1), g = 0, h = b.length, k, l; g < h; g++)for (k in b[g])l = b[g][k], b[g].hasOwnProperty(k) && l !== m && (a.isPlainObject(l) ? c[k] = a.isPlainObject(c[k]) ? a.widget.extend({}, c[k], l) : a.widget.extend({},
                l) : c[k] = l);
            return c
        };
        a.widget.bridge = function (c, b) {
            var g = b.prototype.widgetFullName || c;
            a.fn[c] = function (h) {
                var k = "string" === typeof h, l = d.call(arguments, 1), s = this;
                h = !k && l.length ? a.widget.extend.apply(null, [h].concat(l)) : h;
                k ? this.each(function () {
                    var b, d = a.data(this, g);
                    if (!d)return a.error("cannot call methods on " + c + " prior to initialization; attempted to call method '" + h + "'");
                    if (!a.isFunction(d[h]) || "_" === h.charAt(0))return a.error("no such method '" + h + "' for " + c + " widget instance");
                    b = d[h].apply(d,
                        l);
                    if (b !== d && b !== m)return s = b && b.jquery ? s.pushStack(b.get()) : b, !1
                }) : this.each(function () {
                    var c = a.data(this, g);
                    c ? c.option(h || {})._init() : a.data(this, g, new b(h, this))
                });
                return s
            }
        };
        a.Widget = function () {
        };
        a.Widget._childConstructors = [];
        a.Widget.prototype = {widgetName: "widget", widgetEventPrefix: "", defaultElement: "<div>", options: {disabled: !1, create: null}, _createWidget: function (c, d) {
            d = a(d || this.defaultElement || this)[0];
            this.element = a(d);
            this.uuid = b++;
            this.eventNamespace = "." + this.widgetName + this.uuid;
            this.options =
                a.widget.extend({}, this.options, this._getCreateOptions(), c);
            this.bindings = a();
            this.hoverable = a();
            this.focusable = a();
            d !== this && (a.data(d, this.widgetFullName, this), this._on(!0, this.element, {remove: function (a) {
                a.target === d && this.destroy()
            }}), this.document = a(d.style ? d.ownerDocument : d.document || d), this.window = a(this.document[0].defaultView || this.document[0].parentWindow));
            this._create();
            this._trigger("create", null, this._getCreateEventData());
            this._init()
        }, _getCreateOptions: a.noop, _getCreateEventData: a.noop,
            _create: a.noop, _init: a.noop, destroy: function () {
                this._destroy();
                this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(a.camelCase(this.widgetFullName));
                this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled");
                this.bindings.unbind(this.eventNamespace);
                this.hoverable.removeClass("ui-state-hover");
                this.focusable.removeClass("ui-state-focus")
            }, _destroy: a.noop, widget: function () {
                return this.element
            },
            option: function (c, b) {
                var d = c, h, k, l;
                if (0 === arguments.length)return a.widget.extend({}, this.options);
                if ("string" === typeof c)if (d = {}, h = c.split("."), c = h.shift(), h.length) {
                    k = d[c] = a.widget.extend({}, this.options[c]);
                    for (l = 0; l < h.length - 1; l++)k[h[l]] = k[h[l]] || {}, k = k[h[l]];
                    c = h.pop();
                    if (b === m)return k[c] === m ? null : k[c];
                    k[c] = b
                } else {
                    if (b === m)return this.options[c] === m ? null : this.options[c];
                    d[c] = b
                }
                this._setOptions(d);
                return this
            }, _setOptions: function (a) {
                for (var c in a)this._setOption(c, a[c]);
                return this
            }, _setOption: function (a, c) {
                this.options[a] = c;
                "disabled" === a && (this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!c).attr("aria-disabled", c), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus"));
                return this
            }, enable: function () {
                return this._setOption("disabled", !1)
            }, disable: function () {
                return this._setOption("disabled", !0)
            }, _on: function (c, b, d) {
                var h, k = this;
                "boolean" !== typeof c && (d = b, b = c, c = !1);
                d ? (b = h = a(b), this.bindings = this.bindings.add(b)) : (d = b, b = this.element, h =
                    this.widget());
                a.each(d, function (d, g) {
                    function m() {
                        if (c || !0 !== k.options.disabled && !a(this).hasClass("ui-state-disabled"))return("string" === typeof g ? k[g] : g).apply(k, arguments)
                    }

                    "string" !== typeof g && (m.guid = g.guid = g.guid || m.guid || a.guid++);
                    var r = d.match(/^(\w+)\s*(.*)$/), v = r[1] + k.eventNamespace;
                    (r = r[2]) ? h.delegate(r, v, m) : b.bind(v, m)
                })
            }, _off: function (a, c) {
                c = (c || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace;
                a.unbind(c).undelegate(c)
            }, _delay: function (a, c) {
                var b = this;
                return setTimeout(function () {
                    return("string" === typeof a ? b[a] : a).apply(b, arguments)
                }, c || 0)
            }, _hoverable: function (c) {
                this.hoverable = this.hoverable.add(c);
                this._on(c, {mouseenter: function (c) {
                    a(c.currentTarget).addClass("ui-state-hover")
                }, mouseleave: function (c) {
                    a(c.currentTarget).removeClass("ui-state-hover")
                }})
            }, _focusable: function (c) {
                this.focusable = this.focusable.add(c);
                this._on(c, {focusin: function (c) {
                    a(c.currentTarget).addClass("ui-state-focus")
                }, focusout: function (c) {
                    a(c.currentTarget).removeClass("ui-state-focus")
                }})
            }, _trigger: function (c, b, d) {
                var h,
                    k = this.options[c];
                d = d || {};
                b = a.Event(b);
                b.type = (c === this.widgetEventPrefix ? c : this.widgetEventPrefix + c).toLowerCase();
                b.target = this.element[0];
                if (c = b.originalEvent)for (h in c)h in b || (b[h] = c[h]);
                this.element.trigger(b, d);
                return!(a.isFunction(k) && !1 === k.apply(this.element[0], [b].concat(d)) || b.isDefaultPrevented())
            }};
        a.each({show: "fadeIn", hide: "fadeOut"}, function (c, b) {
            a.Widget.prototype["_" + c] = function (d, h, k) {
                "string" === typeof h && (h = {effect: h});
                var l, s = h ? !0 === h || "number" === typeof h ? b : h.effect || b : c;
                h =
                    h || {};
                "number" === typeof h && (h = {duration: h});
                l = !a.isEmptyObject(h);
                h.complete = k;
                h.delay && d.delay(h.delay);
                if (l && a.effects && a.effects.effect[s])d[c](h); else if (s !== c && d[s])d[s](h.duration, h.easing, k); else d.queue(function (b) {
                    a(this)[c]();
                    k && k.call(d[0]);
                    b()
                })
            }
        })
    })(n);
    (function (a, m) {
        a.widget("mobile.widget", {_createWidget: function () {
            a.Widget.prototype._createWidget.apply(this, arguments);
            this._trigger("init")
        }, _getCreateOptions: function () {
            var b = this.element, d = {};
            a.each(this.options, function (a) {
                var f =
                    b.jqmData(a.replace(/[A-Z]/g, function (a) {
                        return"-" + a.toLowerCase()
                    }));
                f !== m && (d[a] = f)
            });
            return d
        }, enhanceWithin: function (b, d) {
            this.enhance(a(this.options.initSelector, a(b)), d)
        }, enhance: function (b, d) {
            var c, f = a(b), f = a.mobile.enhanceable(f);
            d && f.length && (c = (c = a.mobile.closestPageData(f)) && c.keepNativeSelector() || "", f = f.not(c));
            f[this.widgetName]()
        }, raise: function (a) {
            throw"Widget [" + this.widgetName + "]: " + a;
        }})
    })(n);
    (function (a, m) {
        a.extend(a.mobile, {loadingMessageTextVisible: G, loadingMessageTheme: G, loadingMessage: G,
            showPageLoadingMsg: function (c, b, d) {
                a.mobile.loading("show", c, b, d)
            }, hidePageLoadingMsg: function () {
                a.mobile.loading("hide")
            }, loading: function () {
                this.loaderWidget.loader.apply(this.loaderWidget, arguments)
            }});
        var b = a("html"), d = a.mobile.window;
        a.widget("mobile.loader", {options: {theme: "a", textVisible: !1, html: "", text: "loading"}, defaultHtml: "<div class='ui-loader'><span class='ui-icon ui-icon-loading'></span><h1></h1></div>", fakeFixLoader: function () {
            var c = a("." + a.mobile.activeBtnClass).first();
            this.element.css({top: a.support.scrollTop &&
                d.scrollTop() + d.height() / 2 || c.length && c.offset().top || 100})
        }, checkLoaderPosition: function () {
            var c = this.element.offset(), b = d.scrollTop(), e = a.mobile.getScreenHeight();
            if (c.top < b || c.top - b > e)this.element.addClass("ui-loader-fakefix"), this.fakeFixLoader(), d.unbind("scroll", this.checkLoaderPosition).bind("scroll", a.proxy(this.fakeFixLoader, this))
        }, resetHtml: function () {
            this.element.html(a(this.defaultHtml).html())
        }, show: function (c, f, e) {
            var g, h, k;
            this.resetHtml();
            "object" === a.type(c) ? (k = a.extend({}, this.options,
                c), c = k.theme || a.mobile.loadingMessageTheme) : (k = this.options, c = c || a.mobile.loadingMessageTheme || k.theme);
            h = f || a.mobile.loadingMessage || k.text;
            b.addClass("ui-loading");
            if (!1 !== a.mobile.loadingMessage || k.html)g = a.mobile.loadingMessageTextVisible !== G ? a.mobile.loadingMessageTextVisible : k.textVisible, this.element.attr("class", "ui-loader ui-corner-all ui-body-" + c + " ui-loader-" + (g || f || c.text ? "verbose" : "default") + (k.textonly || e ? " ui-loader-textonly" : "")), k.html ? this.element.html(k.html) : this.element.find("h1").text(h),
                this.element.appendTo(a.mobile.pageContainer), this.checkLoaderPosition(), d.bind("scroll", a.proxy(this.checkLoaderPosition, this))
        }, hide: function () {
            b.removeClass("ui-loading");
            a.mobile.loadingMessage && this.element.removeClass("ui-loader-fakefix");
            a.mobile.window.unbind("scroll", this.fakeFixLoader);
            a.mobile.window.unbind("scroll", this.checkLoaderPosition)
        }});
        d.bind("pagecontainercreate", function () {
            a.mobile.loaderWidget = a.mobile.loaderWidget || a(a.mobile.loader.prototype.defaultHtml).loader()
        })
    })(n, this);
    (function (a, m, b) {
        function d(a) {
            a = a || location.href;
            return"#" + a.replace(/^[^#]*#?(.*)$/, "$1")
        }

        var c = "hashchange", f = u, e, g = a.event.special, h = f.documentMode, k = "on" + c in m && (h === b || 7 < h);
        a.fn[c] = function (a) {
            return a ? this.bind(c, a) : this.trigger(c)
        };
        a.fn[c].delay = 50;
        g[c] = a.extend(g[c], {setup: function () {
            if (k)return!1;
            a(e.start)
        }, teardown: function () {
            if (k)return!1;
            a(e.stop)
        }});
        e = function () {
            function e() {
                var b = d(), f = t(r);
                b !== r ? (C(r = b, f), a(m).trigger(c)) : f !== r && (location.href = location.href.replace(/#.*/, "") + f);
                h = setTimeout(e, a.fn[c].delay)
            }

            var g = {}, h, r = d(), v = function (a) {
                return a
            }, C = v, t = v;
            g.start = function () {
                h || e()
            };
            g.stop = function () {
                h && clearTimeout(h);
                h = b
            };
            m.attachEvent && !m.addEventListener && !k && function () {
                var b, h;
                g.start = function () {
                    b || (h = (h = a.fn[c].src) && h + d(), b = a('<iframe tabindex="-1" title="empty"/>').hide().one("load",function () {
                        h || C(d());
                        e()
                    }).attr("src", h || "javascript:0").insertAfter("body")[0].contentWindow, f.onpropertychange = function () {
                        try {
                            "title" === event.propertyName && (b.document.title = f.title)
                        } catch (a) {
                        }
                    })
                };
                g.stop = v;
                t = function () {
                    return d(b.location.href)
                };
                C = function (d, e) {
                    var h = b.document, g = a.fn[c].domain;
                    d !== e && (h.title = f.title, h.open(), g && h.write('<script>document.domain="' + g + '"\x3c/script>'), h.close(), b.location.hash = d)
                }
            }();
            return g
        }()
    })(n, this);
    (function (a, m) {
        q.matchMedia = q.matchMedia || function (a, d) {
            var c, f = a.documentElement, e = f.firstElementChild || f.firstChild, g = a.createElement("body"), h = a.createElement("div");
            h.id = "mq-test-1";
            h.style.cssText = "position:absolute;top:-100em";
            g.style.background = "none";
            g.appendChild(h);
            return function (a) {
                h.innerHTML = '&shy;<style media="' + a + '"> #mq-test-1 { width: 42px; }</style>';
                f.insertBefore(g, e);
                c = 42 === h.offsetWidth;
                f.removeChild(g);
                return{matches: c, media: a}
            }
        }(u);
        a.mobile.media = function (a) {
            return q.matchMedia(a).matches
        }
    })(n);
    (function (a, m) {
        var b = {touch: "ontouchend"in u};
        a.mobile.support = a.mobile.support || {};
        a.extend(a.support, b);
        a.extend(a.mobile.support, b)
    })(n);
    n.extend(n.support, {orientation: "orientation"in q && "onorientationchange"in q});
    (function (a, m) {
        function b(a) {
            var c =
                a.charAt(0).toUpperCase() + a.substr(1);
            a = (a + " " + e.join(c + " ") + c).split(" ");
            for (var b in a)if (f[a[b]] !== m)return!0
        }

        function d(a, c, b) {
            var d = u.createElement("div");
            b = b ? b : e;
            for (var f, h = 0; h < b.length; h++) {
                var g = b[h], k = void 0;
                k = "" === g ? "" : "-" + g.charAt(0).toLowerCase() + g.substr(1) + "-";
                k = k + a + ": " + c + ";";
                g = g.charAt(0).toUpperCase() + g.substr(1);
                g += "" === g ? a : a.charAt(0).toUpperCase() + a.substr(1);
                d.setAttribute("style", k);
                d.style[g] && (f = !0)
            }
            return!!f
        }

        var c = a("<body>").prependTo("html"), f = c[0].style, e = ["Webkit", "Moz",
            "O"], g = "palmGetResource"in q, h = q.opera, k = q.operamini && "[object OperaMini]" === {}.toString.call(q.operamini), l = q.blackberry && !b("-webkit-transform");
        a.extend(a.mobile, {browser: {}});
        a.mobile.browser.oldIE = function () {
            var a = 3, c = u.createElement("div"), b = c.all || [];
            do c.innerHTML = "\x3c!--[if gt IE " + ++a + "]><br><![endif]--\x3e"; while (b[0]);
            return 4 < a ? a : !a
        }();
        a.extend(a.support, {cssTransitions: "WebKitTransitionEvent"in q || d("transition", "height 100ms linear", ["Webkit", "Moz", ""]) && !a.mobile.browser.oldIE && !h, pushState: "pushState"in history && "replaceState"in history && !(0 <= q.navigator.userAgent.indexOf("Firefox") && q.top !== q) && -1 === q.navigator.userAgent.search(/CriOS/), mediaquery: a.mobile.media("only all"), cssPseudoElement: !!b("content"), touchOverflow: !!b("overflowScrolling"), cssTransform3d: function () {
            var b = a.mobile.media("(-" + e.join("-transform-3d),(-") + "-transform-3d),(transform-3d)");
            if (b)return!!b;
            var d = u.createElement("div"), f = {MozTransform: "-moz-transform", transform: "transform"};
            c.append(d);
            for (var g in f)d.style[g] !==
                m && (d.style[g] = "translate3d( 100px, 1px, 1px )", b = q.getComputedStyle(d).getPropertyValue(f[g]));
            return!!b && "none" !== b
        }(), boxShadow: !!b("boxShadow") && !l, fixedPosition: function () {
            var a = q, c = navigator.userAgent, b = navigator.platform, d = c.match(/AppleWebKit\/([0-9]+)/), d = !!d && d[1], f = c.match(/Fennec\/([0-9]+)/), f = !!f && f[1], e = c.match(/Opera Mobi\/([0-9]+)/), g = !!e && e[1];
            return(-1 < b.indexOf("iPhone") || -1 < b.indexOf("iPad") || -1 < b.indexOf("iPod")) && d && 534 > d || a.operamini && "[object OperaMini]" === {}.toString.call(a.operamini) ||
                e && 7458 > g || -1 < c.indexOf("Android") && d && 533 > d || f && 6 > f || "palmGetResource"in q && d && 534 > d || -1 < c.indexOf("MeeGo") && -1 < c.indexOf("NokiaBrowser/8.5.0") ? !1 : !0
        }(), scrollTop: ("pageXOffset"in q || "scrollTop"in u.documentElement || "scrollTop"in c[0]) && !g && !k, dynamicBaseTag: function () {
            var b = location.protocol + "//" + location.host + location.pathname + "ui-dir/", d = a("head base"), f = null, e = "", g;
            d.length ? e = d.attr("href") : d = f = a("<base>", {href: b}).appendTo("head");
            g = a("<a href='testurl' />").prependTo(c)[0].href;
            d[0].href = e ||
                location.pathname;
            f && f.remove();
            return 0 === g.indexOf(b)
        }(), cssPointerEvents: function () {
            var a = u.createElement("x"), c = u.documentElement, b = q.getComputedStyle;
            if (!("pointerEvents"in a.style))return!1;
            a.style.pointerEvents = "auto";
            a.style.pointerEvents = "x";
            c.appendChild(a);
            b = b && "auto" === b(a, "").pointerEvents;
            c.removeChild(a);
            return!!b
        }(), boundingRect: "undefined" !== typeof u.createElement("div").getBoundingClientRect});
        c.remove();
        g = function () {
            var a = q.navigator.userAgent;
            return-1 < a.indexOf("Nokia") && (-1 < a.indexOf("Symbian/3") ||
                -1 < a.indexOf("Series60/5")) && -1 < a.indexOf("AppleWebKit") && a.match(/(BrowserNG|NokiaBrowser)\/7\.[0-3]/)
        }();
        a.mobile.gradeA = function () {
            return(a.support.mediaquery || a.mobile.browser.oldIE && 7 <= a.mobile.browser.oldIE) && (a.support.boundingRect || null !== a.fn.jquery.match(/1\.[0-7+]\.[0-9+]?/))
        };
        a.mobile.ajaxBlacklist = q.blackberry && !q.WebKitPoint || k || g;
        g && a(function () {
            a("head link[rel='stylesheet']").attr("rel", "alternate stylesheet").attr("rel", "stylesheet")
        });
        a.support.boxShadow || a("html").addClass("ui-mobile-nosupport-boxshadow")
    })(n);
    (function (a, m) {
        var b = a.mobile.window, d;
        a.event.special.navigate = d = {bound: !1, pushStateEnabled: !0, originalEventName: m, isPushStateEnabled: function () {
            return a.support.pushState && !0 === a.mobile.pushStateEnabled && this.isHashChangeEnabled()
        }, isHashChangeEnabled: function () {
            return!0 === a.mobile.hashListeningEnabled
        }, popstate: function (c) {
            var d = new a.Event("navigate"), e = new a.Event("beforenavigate"), g = c.originalEvent.state || {};
            b.trigger(e);
            e.isDefaultPrevented() || (c.historyState && a.extend(g, c.historyState), d.originalEvent =
                c, setTimeout(function () {
                b.trigger(d, {state: g})
            }, 0))
        }, hashchange: function (c, d) {
            var e = new a.Event("navigate"), g = new a.Event("beforenavigate");
            b.trigger(g);
            g.isDefaultPrevented() || (e.originalEvent = c, b.trigger(e, {state: c.hashchangeState || {}}))
        }, setup: function (a, f) {
            d.bound || (d.bound = !0, d.isPushStateEnabled() ? (d.originalEventName = "popstate", b.bind("popstate.navigate", d.popstate)) : d.isHashChangeEnabled() && (d.originalEventName = "hashchange", b.bind("hashchange.navigate", d.hashchange)))
        }}
    })(n);
    (function (a, m) {
        var b,
            d;
        a.mobile.path = b = {uiStateKey: "&ui-state", urlParseRE: /^\s*(((([^:\/#\?]+:)?(?:(\/\/)((?:(([^:@\/#\?]+)(?:\:([^:@\/#\?]+))?)@)?(([^:\/#\?\]\[]+|\[[^\/\]@#?]+\])(?:\:([0-9]+))?))?)?)?((\/?(?:[^\/\?#]+\/+)*)([^\?#]*)))?(\?[^#]+)?)(#.*)?/, getLocation: function (a) {
            var b = a ? this.parseUrl(a) : location;
            a = this.parseUrl(a || location.href).hash;
            return b.protocol + "//" + b.host + b.pathname + b.search + ("#" === a ? "" : a)
        }, parseLocation: function () {
            return this.parseUrl(this.getLocation())
        }, parseUrl: function (c) {
            if ("object" === a.type(c))return c;
            c = b.urlParseRE.exec(c || "") || [];
            return{href: c[0] || "", hrefNoHash: c[1] || "", hrefNoSearch: c[2] || "", domain: c[3] || "", protocol: c[4] || "", doubleSlash: c[5] || "", authority: c[6] || "", username: c[8] || "", password: c[9] || "", host: c[10] || "", hostname: c[11] || "", port: c[12] || "", pathname: c[13] || "", directory: c[14] || "", filename: c[15] || "", search: c[16] || "", hash: c[17] || ""}
        }, makePathAbsolute: function (a, b) {
            if (a && "/" === a.charAt(0))return a;
            a = a || "";
            for (var d = (b = b ? b.replace(/^\/|(\/[^\/]*|[^\/]+)$/g, "") : "") ? b.split("/") : [], g = a.split("/"),
                     h = 0; h < g.length; h++) {
                var k = g[h];
                switch (k) {
                    case ".":
                        break;
                    case "..":
                        d.length && d.pop();
                        break;
                    default:
                        d.push(k)
                }
            }
            return"/" + d.join("/")
        }, isSameDomain: function (a, d) {
            return b.parseUrl(a).domain === b.parseUrl(d).domain
        }, isRelativeUrl: function (a) {
            return"" === b.parseUrl(a).protocol
        }, isAbsoluteUrl: function (a) {
            return"" !== b.parseUrl(a).protocol
        }, makeUrlAbsolute: function (a, d) {
            if (!b.isRelativeUrl(a))return a;
            d === m && (d = this.documentBase);
            var e = b.parseUrl(a), g = b.parseUrl(d), h = e.protocol || g.protocol, k = e.protocol ? e.doubleSlash :
                e.doubleSlash || g.doubleSlash, l = e.authority || g.authority, s = "" !== e.pathname, p = b.makePathAbsolute(e.pathname || g.filename, g.pathname);
            return h + k + l + p + (e.search || !s && g.search || "") + e.hash
        }, addSearchParams: function (c, d) {
            var e = b.parseUrl(c), g = "object" === typeof d ? a.param(d) : d, h = e.search || "?";
            return e.hrefNoSearch + h + ("?" !== h.charAt(h.length - 1) ? "&" : "") + g + (e.hash || "")
        }, convertUrlToDataUrl: function (a) {
            var d = b.parseUrl(a);
            return b.isEmbeddedPage(d) ? d.hash.split("&ui-state=dialog")[0].replace(/^#/, "").replace(/\?.*$/,
                "") : b.isSameDomain(d, this.documentBase) ? d.hrefNoHash.replace(this.documentBase.domain, "").split("&ui-state=dialog")[0] : q.decodeURIComponent(a)
        }, get: function (a) {
            a === m && (a = b.parseLocation().hash);
            return b.stripHash(a).replace(/[^\/]*\.[^\/*]+$/, "")
        }, set: function (a) {
            location.hash = a
        }, isPath: function (a) {
            return/\//.test(a)
        }, clean: function (a) {
            return a.replace(this.documentBase.domain, "")
        }, stripHash: function (a) {
            return a.replace(/^#/, "")
        }, stripQueryParams: function (a) {
            return a.replace(/\?.*$/, "")
        }, cleanHash: function (a) {
            return b.stripHash(a.replace(/\?.*$/,
                "").replace("&ui-state=dialog", ""))
        }, isHashValid: function (a) {
            return/^#[^#]+$/.test(a)
        }, isExternal: function (a) {
            a = b.parseUrl(a);
            return a.protocol && a.domain !== this.documentUrl.domain ? !0 : !1
        }, hasProtocol: function (a) {
            return/^(:?\w+:)/.test(a)
        }, isEmbeddedPage: function (a) {
            a = b.parseUrl(a);
            return"" !== a.protocol ? !this.isPath(a.hash) && a.hash && (a.hrefNoHash === this.documentUrl.hrefNoHash || this.documentBaseDiffers && a.hrefNoHash === this.documentBase.hrefNoHash) : /^#/.test(a.href)
        }, squash: function (a, d) {
            var e, g, h = this.isPath(a);
            g = this.parseUrl(a);
            var k = g.hash, l = "";
            d = d || (b.isPath(a) ? b.getLocation() : b.getDocumentUrl());
            e = h ? b.stripHash(a) : a;
            e = b.isPath(g.hash) ? b.stripHash(g.hash) : e;
            g = e.indexOf(this.uiStateKey);
            -1 < g && (l = e.slice(g), e = e.slice(0, g));
            e = b.makeUrlAbsolute(e, d);
            g = this.parseUrl(e).search;
            if (h) {
                if (b.isPath(k) || 0 === k.replace("#", "").indexOf(this.uiStateKey))k = "";
                l && -1 === k.indexOf(this.uiStateKey) && (k += l);
                -1 === k.indexOf("#") && "" !== k && (k = "#" + k);
                e = b.parseUrl(e);
                e = e.protocol + "//" + e.host + e.pathname + g + k
            } else e += -1 < e.indexOf("#") ?
                l : "#" + l;
            return e
        }, isPreservableHash: function (a) {
            return 0 === a.replace("#", "").indexOf(this.uiStateKey)
        }};
        b.documentUrl = b.parseLocation();
        d = a("head").find("base");
        b.documentBase = d.length ? b.parseUrl(b.makeUrlAbsolute(d.attr("href"), b.documentUrl.href)) : b.documentUrl;
        b.documentBaseDiffers = b.documentUrl.hrefNoHash !== b.documentBase.hrefNoHash;
        b.getDocumentUrl = function (c) {
            return c ? a.extend({}, b.documentUrl) : b.documentUrl.href
        };
        b.getDocumentBase = function (c) {
            return c ? a.extend({}, b.documentBase) : b.documentBase.href
        }
    })(n);
    (function (a, m) {
        a.mobile.History = function (a, d) {
            this.stack = a || [];
            this.activeIndex = d || 0
        };
        a.extend(a.mobile.History.prototype, {getActive: function () {
            return this.stack[this.activeIndex]
        }, getLast: function () {
            return this.stack[this.previousIndex]
        }, getNext: function () {
            return this.stack[this.activeIndex + 1]
        }, getPrev: function () {
            return this.stack[this.activeIndex - 1]
        }, add: function (a, d) {
            d = d || {};
            this.getNext() && this.clearForward();
            d.hash && -1 === d.hash.indexOf("#") && (d.hash = "#" + d.hash);
            d.url = a;
            this.stack.push(d);
            this.activeIndex =
                this.stack.length - 1
        }, clearForward: function () {
            this.stack = this.stack.slice(0, this.activeIndex + 1)
        }, find: function (a, d, c) {
            d = d || this.stack;
            var f, e, g = d.length, h;
            for (e = 0; e < g; e++)if (f = d[e], decodeURIComponent(a) === decodeURIComponent(f.url) || decodeURIComponent(a) === decodeURIComponent(f.hash))if (h = e, c)break;
            return h
        }, closest: function (a) {
            var d, c = this.activeIndex;
            d = this.find(a, this.stack.slice(0, c));
            d === m && (d = this.find(a, this.stack.slice(c), !0), d = d === m ? d : d + c);
            return d
        }, direct: function (b) {
            var d = this.closest(b.url),
                c = this.activeIndex;
            d !== m && (this.activeIndex = d, this.previousIndex = c);
            d < c ? (b.present || b.back || a.noop)(this.getActive(), "back") : d > c ? (b.present || b.forward || a.noop)(this.getActive(), "forward") : d === m && b.missing && b.missing(this.getActive())
        }})
    })(n);
    (function (a, m) {
        var b = a.mobile.path, d = location.href;
        a.mobile.Navigator = function (c) {
            this.history = c;
            this.ignoreInitialHashChange = !0;
            a.mobile.window.bind({"popstate.history": a.proxy(this.popstate, this), "hashchange.history": a.proxy(this.hashchange, this)})
        };
        a.extend(a.mobile.Navigator.prototype,
            {squash: function (c, d) {
                var e, g;
                e = b.isPath(c) ? b.stripHash(c) : c;
                g = b.squash(c);
                e = a.extend({hash: e, url: g}, d);
                q.history.replaceState(e, e.title || u.title, g);
                return e
            }, hash: function (a, d) {
                var e, g;
                e = b.parseUrl(a);
                g = b.parseLocation();
                g.pathname + g.search === e.pathname + e.search ? e = e.hash ? e.hash : e.pathname + e.search : b.isPath(a) ? (e = b.parseUrl(d), e = e.pathname + e.search + (b.isPreservableHash(e.hash) ? e.hash.replace("#", "") : "")) : e = a;
                return e
            }, go: function (c, d, e) {
                var g, h, k;
                k = a.event.special.navigate.isPushStateEnabled();
                g =
                    b.squash(c);
                h = this.hash(c, g);
                e && h !== b.stripHash(b.parseLocation().hash) && (this.preventNextHashChange = e);
                this.preventHashAssignPopState = !0;
                q.location.hash = h;
                this.preventHashAssignPopState = !1;
                d = a.extend({url: g, hash: h, title: u.title}, d);
                k && (k = new a.Event("popstate"), k.originalEvent = {type: "popstate", state: null}, this.squash(c, d), e || (this.ignorePopState = !0, a.mobile.window.trigger(k)));
                this.history.add(d.url, d)
            }, popstate: function (c) {
                var f;
                if (a.event.special.navigate.isPushStateEnabled())if (this.preventHashAssignPopState)this.preventHashAssignPopState = !1, c.stopImmediatePropagation(); else if (this.ignorePopState)this.ignorePopState = !1; else {
                    if (!c.originalEvent.state && (1 === this.history.stack.length && this.ignoreInitialHashChange) && (this.ignoreInitialHashChange = !1, location.href === d)) {
                        c.preventDefault();
                        return
                    }
                    f = b.parseLocation().hash;
                    !c.originalEvent.state && f ? (f = this.squash(f), this.history.add(f.url, f), c.historyState = f) : this.history.direct({url: (c.originalEvent.state || {}).url || f, present: function (b, d) {
                        c.historyState = a.extend({}, b);
                        c.historyState.direction =
                            d
                    }})
                }
            }, hashchange: function (c) {
                var d, e;
                a.event.special.navigate.isHashChangeEnabled() && !a.event.special.navigate.isPushStateEnabled() && (this.preventNextHashChange ? (this.preventNextHashChange = !1, c.stopImmediatePropagation()) : (d = this.history, e = b.parseLocation().hash, this.history.direct({url: e, present: function (b, d) {
                    c.hashchangeState = a.extend({}, b);
                    c.hashchangeState.direction = d
                }, missing: function () {
                    d.add(e, {hash: e, title: u.title})
                }})))
            }})
    })(n);
    (function (a, m) {
        a.mobile.navigate = function (b, c, f) {
            a.mobile.navigate.navigator.go(b,
                c, f)
        };
        a.mobile.navigate.history = new a.mobile.History;
        a.mobile.navigate.navigator = new a.mobile.Navigator(a.mobile.navigate.history);
        var b = a.mobile.path.parseLocation();
        a.mobile.navigate.history.add(b.href, {hash: b.hash})
    })(n);
    (function (a, m, b, d) {
        function c(a) {
            for (; a && "undefined" !== typeof a.originalEvent;)a = a.originalEvent;
            return a
        }

        function f(c) {
            for (var b = {}, d, e; c;) {
                d = a.data(c, t);
                for (e in d)d[e] && (b[e] = b.hasVirtualBinding = !0);
                c = c.parentNode
            }
            return b
        }

        function e() {
            A && (clearTimeout(A), A = 0);
            A = setTimeout(function () {
                H =
                    A = 0;
                F.length = 0;
                L = !1;
                I = !0
            }, a.vmouse.resetTimerDuration)
        }

        function g(b, e, f) {
            var g, h;
            if (!(h = f && f[b])) {
                if (f = !f)a:{
                    for (f = e.target; f;) {
                        if ((h = a.data(f, t)) && (!b || h[b]))break a;
                        f = f.parentNode
                    }
                    f = null
                }
                h = f
            }
            if (h) {
                g = e;
                f = g.type;
                var k, l;
                g = a.Event(g);
                g.type = b;
                b = g.originalEvent;
                h = a.event.props;
                -1 < f.search(/^(mouse|click)/) && (h = z);
                if (b)for (l = h.length, k; l;)k = h[--l], g[k] = b[k];
                -1 < f.search(/mouse(down|up)|click/) && !g.which && (g.which = 1);
                if (-1 !== f.search(/^touch/) && (k = c(b), f = k.touches, k = k.changedTouches, b = f && f.length ? f[0] :
                    k && k.length ? k[0] : d))for (f = 0, h = q.length; f < h; f++)k = q[f], g[k] = b[k];
                a(e.target).trigger(g)
            }
            return g
        }

        function h(c) {
            var b = a.data(c.target, u);
            L || H && H === b || !(b = g("v" + c.type, c)) || (b.isDefaultPrevented() && c.preventDefault(), b.isPropagationStopped() && c.stopPropagation(), b.isImmediatePropagationStopped() && c.stopImmediatePropagation())
        }

        function k(b) {
            var d = c(b).touches, e;
            d && 1 === d.length && (e = b.target, d = f(e), d.hasVirtualBinding && (H = Q++, a.data(e, u, H), A && (clearTimeout(A), A = 0), D = I = !1, e = c(b).touches[0], B = e.pageX, E = e.pageY,
                g("vmouseover", b, d), g("vmousedown", b, d)))
        }

        function l(a) {
            I || (D || g("vmousecancel", a, f(a.target)), D = !0, e())
        }

        function s(b) {
            if (!I) {
                var d = c(b).touches[0], h = D, k = a.vmouse.moveDistanceThreshold, l = f(b.target);
                (D = D || Math.abs(d.pageX - B) > k || Math.abs(d.pageY - E) > k) && !h && g("vmousecancel", b, l);
                g("vmousemove", b, l);
                e()
            }
        }

        function p(a) {
            if (!I) {
                I = !0;
                var b = f(a.target), d;
                g("vmouseup", a, b);
                D || (d = g("vclick", a, b)) && d.isDefaultPrevented() && (d = c(a).changedTouches[0], F.push({touchID: H, x: d.clientX, y: d.clientY}), L = !0);
                g("vmouseout",
                    a, b);
                D = !1;
                e()
            }
        }

        function r(c) {
            c = a.data(c, t);
            var b;
            if (c)for (b in c)if (c[b])return!0;
            return!1
        }

        function v() {
        }

        function n(c) {
            var b = c.substr(1);
            return{setup: function (d, e) {
                r(this) || a.data(this, t, {});
                a.data(this, t)[c] = !0;
                w[c] = (w[c] || 0) + 1;
                1 === w[c] && J.bind(b, h);
                a(this).bind(b, v);
                N && (w.touchstart = (w.touchstart || 0) + 1, 1 === w.touchstart && J.bind("touchstart", k).bind("touchend", p).bind("touchmove", s).bind("scroll", l))
            }, teardown: function (d, e) {
                --w[c];
                w[c] || J.unbind(b, h);
                N && (--w.touchstart, w.touchstart || J.unbind("touchstart",
                    k).unbind("touchmove", s).unbind("touchend", p).unbind("scroll", l));
                var f = a(this), g = a.data(this, t);
                g && (g[c] = !1);
                f.unbind(b, v);
                r(this) || f.removeData(t)
            }}
        }

        var t = "virtualMouseBindings", u = "virtualTouchID";
        m = "vmouseover vmousedown vmousemove vmouseup vclick vmouseout vmousecancel".split(" ");
        var q = "clientX clientY pageX pageY screenX screenY".split(" "), z = a.event.props.concat(a.event.mouseHooks ? a.event.mouseHooks.props : []), w = {}, A = 0, B = 0, E = 0, D = !1, F = [], L = !1, I = !1, N = "addEventListener"in b, J = a(b), Q = 1, H = 0, O;
        a.vmouse =
        {moveDistanceThreshold: 10, clickDistanceThreshold: 10, resetTimerDuration: 1500};
        for (var K = 0; K < m.length; K++)a.event.special[m[K]] = n(m[K]);
        N && b.addEventListener("click", function (c) {
            var b = F.length, d = c.target, e, f, g, h, k;
            if (b)for (e = c.clientX, f = c.clientY, O = a.vmouse.clickDistanceThreshold, g = d; g;) {
                for (h = 0; h < b; h++)if (k = F[h], g === d && Math.abs(k.x - e) < O && Math.abs(k.y - f) < O || a.data(g, u) === k.touchID) {
                    c.preventDefault();
                    c.stopPropagation();
                    return
                }
                g = g.parentNode
            }
        }, !0)
    })(n, q, u);
    (function (a, m, b) {
        function d(c, b, d) {
            var e = d.type;
            d.type = b;
            a.event.dispatch.call(c, d);
            d.type = e
        }

        var c = a(u);
        a.each("touchstart touchmove touchend tap taphold swipe swipeleft swiperight scrollstart scrollstop".split(" "), function (c, b) {
            a.fn[b] = function (a) {
                return a ? this.bind(b, a) : this.trigger(b)
            };
            a.attrFn && (a.attrFn[b] = !0)
        });
        var f = (m = a.mobile.support.touch) ? "touchstart" : "mousedown", e = m ? "touchend" : "mouseup", g = m ? "touchmove" : "mousemove";
        a.event.special.scrollstart = {enabled: !0, setup: function () {
            function c(a, f) {
                e = f;
                d(b, e ? "scrollstart" : "scrollstop", a)
            }

            var b =
                this, e, f;
            a(b).bind("touchmove scroll", function (b) {
                a.event.special.scrollstart.enabled && (e || c(b, !0), clearTimeout(f), f = setTimeout(function () {
                    c(b, !1)
                }, 50))
            })
        }};
        a.event.special.tap = {tapholdThreshold: 750, setup: function () {
            var b = this, e = a(b);
            e.bind("vmousedown", function (f) {
                function g() {
                    clearTimeout(n)
                }

                function m() {
                    g();
                    e.unbind("vclick", r).unbind("vmouseup", g);
                    c.unbind("vmousecancel", m)
                }

                function r(a) {
                    m();
                    v === a.target && d(b, "tap", a)
                }

                if (f.which && 1 !== f.which)return!1;
                var v = f.target, n;
                e.bind("vmouseup", g).bind("vclick",
                    r);
                c.bind("vmousecancel", m);
                n = setTimeout(function () {
                    d(b, "taphold", a.Event("taphold", {target: v}))
                }, a.event.special.tap.tapholdThreshold)
            })
        }};
        a.event.special.swipe = {scrollSupressionThreshold: 30, durationThreshold: 1E3, horizontalDistanceThreshold: 30, verticalDistanceThreshold: 75, start: function (c) {
            var b = c.originalEvent.touches ? c.originalEvent.touches[0] : c;
            return{time: (new Date).getTime(), coords: [b.pageX, b.pageY], origin: a(c.target)}
        }, stop: function (a) {
            a = a.originalEvent.touches ? a.originalEvent.touches[0] : a;
            return{time: (new Date).getTime(), coords: [a.pageX, a.pageY]}
        }, handleSwipe: function (c, b) {
            b.time - c.time < a.event.special.swipe.durationThreshold && (Math.abs(c.coords[0] - b.coords[0]) > a.event.special.swipe.horizontalDistanceThreshold && Math.abs(c.coords[1] - b.coords[1]) < a.event.special.swipe.verticalDistanceThreshold) && c.origin.trigger("swipe").trigger(c.coords[0] > b.coords[0] ? "swipeleft" : "swiperight")
        }, setup: function () {
            var c = a(this);
            c.bind(f, function (d) {
                function f(c) {
                    m && (p = a.event.special.swipe.stop(c), Math.abs(m.coords[0] -
                        p.coords[0]) > a.event.special.swipe.scrollSupressionThreshold && c.preventDefault())
                }

                var m = a.event.special.swipe.start(d), p;
                c.bind(g, f).one(e, function () {
                    c.unbind(g, f);
                    m && p && a.event.special.swipe.handleSwipe(m, p);
                    m = p = b
                })
            })
        }};
        a.each({scrollstop: "scrollstart", taphold: "tap", swipeleft: "swipe", swiperight: "swipe"}, function (c, b) {
            a.event.special[c] = {setup: function () {
                a(this).bind(b, a.noop)
            }}
        })
    })(n, this);
    (function (a) {
        a.event.special.throttledresize = {setup: function () {
            a(this).bind("resize", m)
        }, teardown: function () {
            a(this).unbind("resize",
                m)
        }};
        var m = function () {
            c = (new Date).getTime();
            f = c - b;
            250 <= f ? (b = c, a(this).trigger("throttledresize")) : (d && clearTimeout(d), d = setTimeout(m, 250 - f))
        }, b = 0, d, c, f
    })(n);
    (function (a, m) {
        function b() {
            var a = f();
            a !== e && (e = a, d.trigger(c))
        }

        var d = a(m), c = "orientationchange", f, e, g, h, k = {0: !0, 180: !0};
        a.support.orientation && (g = m.innerWidth || d.width(), h = m.innerHeight || d.height(), g = g > h && 50 < g - h, h = k[m.orientation], g && h || !g && !h) && (k = {"-90": !0, 90: !0});
        a.event.special.orientationchange = a.extend({}, a.event.special.orientationchange,
            {setup: function () {
                if (a.support.orientation && !a.event.special.orientationchange.disabled)return!1;
                e = f();
                d.bind("throttledresize", b)
            }, teardown: function () {
                if (a.support.orientation && !a.event.special.orientationchange.disabled)return!1;
                d.unbind("throttledresize", b)
            }, add: function (a) {
                var c = a.handler;
                a.handler = function (a) {
                    a.orientation = f();
                    return c.apply(this, arguments)
                }
            }});
        a.event.special.orientationchange.orientation = f = function () {
            var c = !0, c = u.documentElement;
            return(c = a.support.orientation ? k[m.orientation] :
                c && 1.1 > c.clientWidth / c.clientHeight) ? "portrait" : "landscape"
        };
        a.fn[c] = function (a) {
            return a ? this.bind(c, a) : this.trigger(c)
        };
        a.attrFn && (a.attrFn[c] = !0)
    })(n, this);
    (function (a, m) {
        a.widget("mobile.page", a.mobile.widget, {options: {theme: "c", domCache: !1, keepNativeDefault: ":jqmData(role='none'), :jqmData(role='nojs')"}, _create: function () {
            if (!1 === this._trigger("beforecreate"))return!1;
            this.element.attr("tabindex", "0").addClass("ui-page ui-body-" + this.options.theme);
            this._on(this.element, {pagebeforehide: "removeContainerBackground",
                pagebeforeshow: "_handlePageBeforeShow"})
        }, _handlePageBeforeShow: function (a) {
            this.setContainerBackground()
        }, removeContainerBackground: function () {
            a.mobile.pageContainer.removeClass("ui-overlay-" + a.mobile.getInheritedTheme(this.element.parent()))
        }, setContainerBackground: function (b) {
            this.options.theme && a.mobile.pageContainer.addClass("ui-overlay-" + (b || this.options.theme))
        }, keepNativeSelector: function () {
            var b = this.options;
            return b.keepNative && a.trim(b.keepNative) && b.keepNative !== b.keepNativeDefault ? [b.keepNative,
                b.keepNativeDefault].join(", ") : b.keepNativeDefault
        }})
    })(n);
    (function (a, m, b) {
        var d = function (c) {
            c === b && (c = !0);
            return function (b, d, h, k) {
                var l = new a.Deferred, s = d ? " reverse" : "", p = a.mobile.urlHistory.getActive().lastScroll || a.mobile.defaultHomeScroll, r = a.mobile.getScreenHeight(), v = !1 !== a.mobile.maxTransitionWidth && a.mobile.window.width() > a.mobile.maxTransitionWidth, n = !a.support.cssTransitions || v || !b || "none" === b || Math.max(a.mobile.window.scrollTop(), p) > a.mobile.getMaxScrollForTransition(), t = function () {
                    a.mobile.pageContainer.toggleClass("ui-mobile-viewport-transitioning viewport-" +
                        b)
                }, u = function () {
                    a.event.special.scrollstart.enabled = !1;
                    m.scrollTo(0, p);
                    setTimeout(function () {
                        a.event.special.scrollstart.enabled = !0
                    }, 150)
                }, q = function () {
                    k.removeClass(a.mobile.activePageClass + " out in reverse " + b).height("")
                }, v = function () {
                    k && c && q();
                    h.css("z-index", -10);
                    h.addClass(a.mobile.activePageClass + " ui-page-pre-in");
                    a.mobile.focusPage(h);
                    h.height(r + p);
                    u();
                    h.css("z-index", "");
                    n || h.animationComplete(z);
                    h.removeClass(" ui-page-pre-in").addClass(b + " in" + s);
                    n && z()
                }, z = function () {
                    c || k && q();
                    h.removeClass("out in reverse " +
                        b).height("");
                    t();
                    a.mobile.window.scrollTop() !== p && u();
                    l.resolve(b, d, h, k, !0)
                };
                t();
                k && !n ? (c ? k.animationComplete(v) : v(), k.height(r + a.mobile.window.scrollTop()).addClass(b + " out" + s)) : v();
                return l.promise()
            }
        }, c = d(), d = d(!1);
        a.mobile.defaultTransitionHandler = c;
        a.mobile.transitionHandlers = {"default": a.mobile.defaultTransitionHandler, sequential: c, simultaneous: d};
        a.mobile.transitionFallbacks = {};
        a.mobile._maybeDegradeTransition = function (c) {
            c && (!a.support.cssTransform3d && a.mobile.transitionFallbacks[c]) && (c =
                a.mobile.transitionFallbacks[c]);
            return c
        };
        a.mobile.getMaxScrollForTransition = a.mobile.getMaxScrollForTransition || function () {
            return 3 * a.mobile.getScreenHeight()
        }
    })(n, this);
    (function (a, m) {
        function b(c) {
            !p || p.closest("." + a.mobile.activePageClass).length && !c || p.removeClass(a.mobile.activeBtnClass);
            p = null
        }

        function d() {
            t = !1;
            0 < n.length && a.mobile.changePage.apply(null, n.pop())
        }

        function c(c, b, d, e) {
            b && b.data("mobile-page")._trigger("beforehide", null, {nextPage: c});
            c.data("mobile-page")._trigger("beforeshow",
                null, {prevPage: b || a("")});
            a.mobile.hidePageLoadingMsg();
            d = a.mobile._maybeDegradeTransition(d);
            d = (a.mobile.transitionHandlers[d || "default"] || a.mobile.defaultTransitionHandler)(d, e, c, b);
            d.done(function () {
                b && b.data("mobile-page")._trigger("hide", null, {nextPage: c});
                c.data("mobile-page")._trigger("show", null, {prevPage: b || a("")})
            });
            return d
        }

        function f(c, b) {
            b && c.attr("data-" + a.mobile.ns + "role", b);
            c.page()
        }

        function e(a) {
            for (; a && ("string" !== typeof a.nodeName || "a" !== a.nodeName.toLowerCase());)a = a.parentNode;
            return a
        }

        function g(c) {
            c = a(c).closest(".ui-page").jqmData("url");
            var b = w.hrefNoHash;
            c && l.isPath(c) || (c = b);
            return l.makeUrlAbsolute(c, b)
        }

        var h = a.mobile.window;
        a("html");
        var k = a("head"), l = a.extend(a.mobile.path, {getFilePath: function (c) {
            var b = "&" + a.mobile.subPageUrlKey;
            return c && c.split(b)[0].split(x)[0]
        }, isFirstPageUrl: function (c) {
            c = l.parseUrl(l.makeUrlAbsolute(c, this.documentBase));
            var b = a.mobile.firstPage, b = b && b[0] ? b[0].id : m;
            return(c.hrefNoHash === this.documentUrl.hrefNoHash || this.documentBaseDiffers &&
                c.hrefNoHash === this.documentBase.hrefNoHash) && (!c.hash || "#" === c.hash || b && c.hash.replace(/^#/, "") === b)
        }, isPermittedCrossDomainRequest: function (c, b) {
            return a.mobile.allowCrossDomainPages && "file:" === c.protocol && -1 !== b.search(/^https?:/)
        }}), s = null, p = null, r = a.Deferred(), v = a.mobile.navigate.history, n = [], t = !1, x = "&ui-state=dialog", y = k.children("base"), z = l.documentUrl, w = l.documentBase, A = a.mobile.getScreenHeight, B = a.support.dynamicBaseTag ? {element: y.length ? y : a("<base>", {href: w.hrefNoHash}).prependTo(k), set: function (a) {
            a =
                l.parseUrl(a).hrefNoHash;
            B.element.attr("href", l.makeUrlAbsolute(a, w))
        }, reset: function () {
            B.element.attr("href", w.hrefNoSearch)
        }} : m;
        a.mobile.getDocumentUrl = l.getDocumentUrl;
        a.mobile.getDocumentBase = l.getDocumentBase;
        a.mobile.back = function () {
            var a = q.navigator;
            this.phonegapNavigationEnabled && a && a.app && a.app.backHistory ? a.app.backHistory() : q.history.back()
        };
        a.mobile.focusPage = function (a) {
            var c = a.find("[autofocus]"), b = a.find(".ui-title:eq(0)");
            c.length ? c.focus() : b.length ? b.focus() : a.focus()
        };
        var E = !0,
            D, F;
        D = function () {
            if (E) {
                var c = a.mobile.urlHistory.getActive();
                if (c) {
                    var b = h.scrollTop();
                    c.lastScroll = b < a.mobile.minScrollBack ? a.mobile.defaultHomeScroll : b
                }
            }
        };
        F = function () {
            setTimeout(D, 100)
        };
        h.bind(a.support.pushState ? "popstate" : "hashchange", function () {
            E = !1
        });
        h.one(a.support.pushState ? "popstate" : "hashchange", function () {
            E = !0
        });
        h.one("pagecontainercreate", function () {
            a.mobile.pageContainer.bind("pagechange", function () {
                E = !0;
                h.unbind("scrollstop", F);
                h.bind("scrollstop", F)
            })
        });
        h.bind("scrollstop", F);
        a.mobile._maybeDegradeTransition =
            a.mobile._maybeDegradeTransition || function (a) {
                return a
            };
        a.mobile.resetActivePageHeight = function (c) {
            var b = a("." + a.mobile.activePageClass), d = parseFloat(b.css("padding-top")), e = parseFloat(b.css("padding-bottom")), f = parseFloat(b.css("border-top-width")), g = parseFloat(b.css("border-bottom-width"));
            c = "number" === typeof c ? c : A();
            b.css("min-height", c - d - e - f - g)
        };
        a.fn.animationComplete = function (c) {
            if (a.support.cssTransitions)return a(this).one("webkitAnimationEnd animationend", c);
            setTimeout(c, 0);
            return a(this)
        };
        a.mobile.path = l;
        a.mobile.base = B;
        a.mobile.urlHistory = v;
        a.mobile.dialogHashKey = x;
        a.mobile.allowCrossDomainPages = !1;
        a.mobile._bindPageRemove = function () {
            var c = a(this);
            !c.data("mobile-page").options.domCache && c.is(":jqmData(external-page='true')") && c.bind("pagehide.remove", function (c) {
                c = a(this);
                var b = new a.Event("pageremove");
                c.trigger(b);
                b.isDefaultPrevented() || c.removeWithDependents()
            })
        };
        a.mobile.loadPage = function (c, b) {
            var d = a.Deferred(), e = a.extend({}, a.mobile.loadPage.defaults, b), h = null, k = null, s = l.makeUrlAbsolute(c,
                a.mobile.activePage && g(a.mobile.activePage) || w.hrefNoHash);
            e.data && "get" === e.type && (s = l.addSearchParams(s, e.data), e.data = m);
            e.data && "post" === e.type && (e.reloadPage = !0);
            var p = l.getFilePath(s), r = l.convertUrlToDataUrl(s);
            e.pageContainer = e.pageContainer || a.mobile.pageContainer;
            h = e.pageContainer.children("[data-" + a.mobile.ns + "url='" + r + "']");
            0 === h.length && (r && !l.isPath(r)) && (h = e.pageContainer.children("#" + r).attr("data-" + a.mobile.ns + "url", r).jqmData("url", r));
            if (0 === h.length)if (a.mobile.firstPage && l.isFirstPageUrl(p))a.mobile.firstPage.parent().length &&
            (h = a(a.mobile.firstPage)); else if (l.isEmbeddedPage(p))return d.reject(s, b), d.promise();
            if (h.length) {
                if (!e.reloadPage)return f(h, e.role), d.resolve(s, b, h), B && !b.prefetch && B.set(c), d.promise();
                k = h
            }
            var n = e.pageContainer, v = new a.Event("pagebeforeload"), t = {url: c, absUrl: s, dataUrl: r, deferred: d, options: e};
            n.trigger(v, t);
            if (v.isDefaultPrevented())return d.promise();
            if (e.showLoadMsg)var u = setTimeout(function () {
                a.mobile.showPageLoadingMsg()
            }, e.loadMsgDelay);
            !B || "undefined" !== typeof b && "undefined" !== typeof b.prefetch ||
            B.reset();
            a.mobile.allowCrossDomainPages || l.isSameDomain(z, s) ? a.ajax({url: p, type: e.type, data: e.data, contentType: e.contentType, dataType: "html", success: function (g, m, w) {
                var n = a("<div></div>"), v = g.match(/<title[^>]*>([^<]*)/) && RegExp.$1, C = RegExp("\\bdata-" + a.mobile.ns + "url=[\"']?([^\"'>]*)[\"']?");
                RegExp("(<[^>]+\\bdata-" + a.mobile.ns + "role=[\"']?page[\"']?[^>]*>)").test(g) && (RegExp.$1 && C.test(RegExp.$1) && RegExp.$1) && (c = p = l.getFilePath(a("<div>" + RegExp.$1 + "</div>").text()));
                !B || "undefined" !== typeof b &&
                    "undefined" !== typeof b.prefetch || B.set(p);
                n.get(0).innerHTML = g;
                h = n.find(":jqmData(role='page'), :jqmData(role='dialog')").first();
                h.length || (h = a("<div data-" + a.mobile.ns + "role='page'>" + (g.split(/<\/?body[^>]*>/gmi)[1] || "") + "</div>"));
                v && !h.jqmData("title") && (~v.indexOf("&") && (v = a("<div>" + v + "</div>").text()), h.jqmData("title", v));
                if (!a.support.dynamicBaseTag) {
                    var q = l.get(p);
                    h.find("[src], link[href], a[rel='external'], :jqmData(ajax='false'), a[target]").each(function () {
                        var c = a(this).is("[href]") ?
                            "href" : a(this).is("[src]") ? "src" : "action", b = a(this).attr(c), b = b.replace(location.protocol + "//" + location.host + location.pathname, "");
                        /^(\w+:|#|\/)/.test(b) || a(this).attr(c, q + b)
                    })
                }
                h.attr("data-" + a.mobile.ns + "url", l.convertUrlToDataUrl(p)).attr("data-" + a.mobile.ns + "external-page", !0).appendTo(e.pageContainer);
                h.one("pagecreate", a.mobile._bindPageRemove);
                f(h, e.role);
                -1 < s.indexOf("&" + a.mobile.subPageUrlKey) && (h = e.pageContainer.children("[data-" + a.mobile.ns + "url='" + r + "']"));
                e.showLoadMsg && (clearTimeout(u),
                    a.mobile.hidePageLoadingMsg());
                t.xhr = w;
                t.textStatus = m;
                t.page = h;
                e.pageContainer.trigger("pageload", t);
                d.resolve(s, b, h, k)
            }, error: function (c, f, g) {
                B && B.set(l.get());
                t.xhr = c;
                t.textStatus = f;
                t.errorThrown = g;
                c = new a.Event("pageloadfailed");
                e.pageContainer.trigger(c, t);
                c.isDefaultPrevented() || (e.showLoadMsg && (clearTimeout(u), a.mobile.hidePageLoadingMsg(), a.mobile.showPageLoadingMsg(a.mobile.pageLoadErrorMessageTheme, a.mobile.pageLoadErrorMessage, !0), setTimeout(a.mobile.hidePageLoadingMsg, 1500)), d.reject(s,
                    b))
            }}) : d.reject(s, b);
            return d.promise()
        };
        a.mobile.loadPage.defaults = {type: "get", data: m, reloadPage: !1, role: m, showLoadMsg: !1, pageContainer: m, loadMsgDelay: 50};
        a.mobile.changePage = function (e, h) {
            if (t)n.unshift(arguments); else {
                var k = a.extend({}, a.mobile.changePage.defaults, h), s;
                k.pageContainer = k.pageContainer || a.mobile.pageContainer;
                k.fromPage = k.fromPage || a.mobile.activePage;
                s = "string" === typeof e;
                var p = k.pageContainer, r = new a.Event("pagebeforechange"), B = {toPage: e, options: k};
                B.absUrl = s ? l.makeUrlAbsolute(e,
                    a.mobile.activePage && g(a.mobile.activePage) || w.hrefNoHash) : e.data("absUrl");
                p.trigger(r, B);
                if (!r.isDefaultPrevented())if (e = B.toPage, t = !0, "string" === typeof e)k.target = e, a.mobile.loadPage(e, k).done(function (c, b, d, e) {
                    t = !1;
                    b.duplicateCachedPage = e;
                    d.data("absUrl", B.absUrl);
                    a.mobile.changePage(d, b)
                }).fail(function (a, c) {
                    b(!0);
                    d();
                    k.pageContainer.trigger("pagechangefailed", B)
                }); else {
                    e[0] !== a.mobile.firstPage[0] || k.dataUrl || (k.dataUrl = z.hrefNoHash);
                    s = k.fromPage;
                    var q = r = k.dataUrl && l.convertUrlToDataUrl(k.dataUrl) ||
                        e.jqmData("url");
                    l.getFilePath(r);
                    var A = v.getActive(), y = 0 === v.activeIndex, D = 0, E = u.title, F = "dialog" === k.role || "dialog" === e.jqmData("role");
                    if (s && s[0] === e[0] && !k.allowSamePageTransition)t = !1, p.trigger("pagechange", B), k.fromHashChange && v.direct({url: r}); else {
                        f(e, k.role);
                        k.fromHashChange && (D = "back" === h.direction ? -1 : 1);
                        try {
                            u.activeElement && "body" !== u.activeElement.nodeName.toLowerCase() ? a(u.activeElement).blur() : a("input:focus, textarea:focus, select:focus").blur()
                        } catch (G) {
                        }
                        var M = !1;
                        F && A && (A.url && (-1 <
                            A.url.indexOf(x) && a.mobile.activePage && !a.mobile.activePage.is(".ui-dialog") && 0 < v.activeIndex) && (k.changeHash = !1, M = !0), r = A.url || "", r = !M && -1 < r.indexOf("#") ? r + x : r + ("#" + x), 0 === v.activeIndex && r === v.initialDst && (r += x));
                        var P = A ? e.jqmData("title") || e.children(":jqmData(role='header')").find(".ui-title").text() : E;
                        P && E === u.title && (E = P);
                        e.jqmData("title") || e.jqmData("title", E);
                        k.transition = k.transition || (D && !y ? A.transition : m) || (F ? a.mobile.defaultDialogTransition : a.mobile.defaultPageTransition);
                        !D && M && (v.getActive().pageUrl =
                            q);
                        r && !k.fromHashChange && (!l.isPath(r) && 0 > r.indexOf("#") && (r = "#" + r), q = {transition: k.transition, title: E, pageUrl: q, role: k.role}, !1 !== k.changeHash && a.mobile.hashListeningEnabled ? a.mobile.navigate(r, q, !0) : e[0] !== a.mobile.firstPage[0] && a.mobile.navigate.history.add(r, q));
                        u.title = E;
                        a.mobile.activePage = e;
                        k.reverse = k.reverse || 0 > D;
                        c(e, s, k.transition, k.reverse).done(function (c, f, g, h, l) {
                            b();
                            k.duplicateCachedPage && k.duplicateCachedPage.remove();
                            l || a.mobile.focusPage(e);
                            d();
                            p.trigger("pagechange", B)
                        })
                    }
                }
            }
        };
        a.mobile.changePage.defaults =
        {transition: m, reverse: !1, changeHash: !0, fromHashChange: !1, role: m, duplicateCachedPage: m, pageContainer: m, showLoadMsg: !0, dataUrl: m, fromPage: m, allowSamePageTransition: !1};
        a.mobile.navreadyDeferred = a.Deferred();
        a.mobile._registerInternalEvents = function () {
            var c = function (c, b) {
                var d, e = !0, f, h;
                if (!a.mobile.ajaxEnabled || c.is(":jqmData(ajax='false')") || !c.jqmHijackable().length || c.attr("target"))return!1;
                d = c.attr("action");
                h = (c.attr("method") || "get").toLowerCase();
                d || (d = g(c), "get" === h && (d = l.parseUrl(d).hrefNoSearch),
                    d === w.hrefNoHash && (d = z.hrefNoSearch));
                d = l.makeUrlAbsolute(d, g(c));
                if (l.isExternal(d) && !l.isPermittedCrossDomainRequest(z, d))return!1;
                b || (e = c.serializeArray(), s && s[0].form === c[0] && (f = s.attr("name")) && (a.each(e, function (a, c) {
                    if (c.name === f)return f = "", !1
                }), f && e.push({name: f, value: s.attr("value")})), e = {url: d, options: {type: h, data: a.param(e), transition: c.jqmData("transition"), reverse: "reverse" === c.jqmData("direction"), reloadPage: !0}});
                return e
            };
            a.mobile.document.delegate("form", "submit", function (b) {
                var d =
                    c(a(this));
                d && (a.mobile.changePage(d.url, d.options), b.preventDefault())
            });
            a.mobile.document.bind("vclick", function (d) {
                var f, g = d.target, h = !1;
                if (!(1 < d.which) && a.mobile.linkBindingEnabled) {
                    s = a(g);
                    if (a.data(g, "mobile-button")) {
                        if (!c(a(g).closest("form"), !0))return;
                        g.parentNode && (g = g.parentNode)
                    } else if (g = e(g), !g || "#" === l.parseUrl(g.getAttribute("href") || "#").hash || !a(g).jqmHijackable().length)return;
                    ~g.className.indexOf("ui-link-inherit") ? g.parentNode && (f = a.data(g.parentNode, "buttonElements")) : f = a.data(g,
                        "buttonElements");
                    f ? g = f.outer : h = !0;
                    d = a(g);
                    h && (d = d.closest(".ui-btn"));
                    0 < d.length && !d.hasClass("ui-disabled") && (b(!0), p = d, p.addClass(a.mobile.activeBtnClass))
                }
            });
            a.mobile.document.bind("click", function (c) {
                if (a.mobile.linkBindingEnabled && !c.isDefaultPrevented()) {
                    var d = e(c.target), f = a(d), h;
                    if (d && !(1 < c.which) && f.jqmHijackable().length) {
                        h = function () {
                            q.setTimeout(function () {
                                b(!0)
                            }, 200)
                        };
                        if (f.is(":jqmData(rel='back')"))return a.mobile.back(), !1;
                        var k = g(f), d = l.makeUrlAbsolute(f.attr("href") || "#", k);
                        if (a.mobile.ajaxEnabled ||
                            l.isEmbeddedPage(d)) {
                            if (-1 !== d.search("#"))if (d = d.replace(/[^#]*#/, ""))d = l.isPath(d) ? l.makeUrlAbsolute(d, k) : l.makeUrlAbsolute("#" + d, z.hrefNoHash); else {
                                c.preventDefault();
                                return
                            }
                            if (f.is("[rel='external']") || (f.is(":jqmData(ajax='false')") || f.is("[target]")) || l.isExternal(d) && !l.isPermittedCrossDomainRequest(z, d))h(); else {
                                h = f.jqmData("transition");
                                var k = "reverse" === f.jqmData("direction") || f.jqmData("back"), s = f.attr("data-" + a.mobile.ns + "rel") || m;
                                a.mobile.changePage(d, {transition: h, reverse: k, role: s, link: f});
                                c.preventDefault()
                            }
                        } else h()
                    }
                }
            });
            a.mobile.document.delegate(".ui-page", "pageshow.prefetch", function () {
                var c = [];
                a(this).find("a:jqmData(prefetch)").each(function () {
                    var b = a(this), d = b.attr("href");
                    d && -1 === a.inArray(d, c) && (c.push(d), a.mobile.loadPage(d, {role: b.attr("data-" + a.mobile.ns + "rel"), prefetch: !0}))
                })
            });
            a.mobile._handleHashChange = function (c, b) {
                var d = l.stripHash(c), e = 0 === a.mobile.urlHistory.stack.length ? "none" : m, f = {changeHash: !1, fromHashChange: !0, reverse: "back" === b.direction};
                a.extend(f, b, {transition: (v.getLast() ||
                {}).transition || e});
                if (0 < v.activeIndex && -1 < d.indexOf(x) && v.initialDst !== d) {
                    if (a.mobile.activePage && !a.mobile.activePage.is(".ui-dialog")) {
                        "back" === b.direction ? a.mobile.back() : q.history.forward();
                        return
                    }
                    d = b.pageUrl;
                    e = a.mobile.urlHistory.getActive();
                    a.extend(f, {role: e.role, transition: e.transition, reverse: "back" === b.direction})
                }
                d ? (d = l.isPath(d) ? d : l.makeUrlAbsolute("#" + d, w), d === l.makeUrlAbsolute("#" + v.initialDst, w) && (v.stack.length && v.stack[0].url !== v.initialDst.replace(x, "")) && (d = a.mobile.firstPage),
                    a.mobile.changePage(d, f)) : a.mobile.changePage(a.mobile.firstPage, f)
            };
            h.bind("navigate", function (c, b) {
                var d;
                c.originalEvent && c.originalEvent.isDefaultPrevented() || (d = -1 < a.event.special.navigate.originalEventName.indexOf("hashchange") ? b.state.hash : b.state.url, d || (d = a.mobile.path.parseLocation().hash), d && "#" !== d && 0 !== d.indexOf("#" + a.mobile.path.uiStateKey) || (d = location.href), a.mobile._handleHashChange(d, b.state))
            });
            a.mobile.document.bind("pageshow", a.mobile.resetActivePageHeight);
            a.mobile.window.bind("throttledresize",
                a.mobile.resetActivePageHeight)
        };
        a(function () {
            r.resolve()
        });
        a.when(r, a.mobile.navreadyDeferred).done(function () {
            a.mobile._registerInternalEvents()
        })
    })(n);
    n.mobile.transitionFallbacks.flip = "fade";
    n.mobile.transitionFallbacks.flow = "fade";
    n.mobile.transitionFallbacks.pop = "fade";
    (function (a, m, b) {
        a.mobile.transitionHandlers.slide = a.mobile.transitionHandlers.simultaneous;
        a.mobile.transitionFallbacks.slide = "fade"
    })(n, this);
    n.mobile.transitionFallbacks.slidedown = "fade";
    n.mobile.transitionFallbacks.slidefade =
        "fade";
    n.mobile.transitionFallbacks.slideup = "fade";
    n.mobile.transitionFallbacks.turn = "fade";
    (function (a, m) {
        a.mobile.page.prototype.options.degradeInputs = {color: !1, date: !1, datetime: !1, "datetime-local": !1, email: !1, month: !1, number: !1, range: "number", search: "text", tel: !1, time: !1, url: !1, week: !1};
        a.mobile.document.bind("pagecreate create", function (b) {
            var d = a.mobile.closestPageData(a(b.target)), c;
            d && (c = d.options, a(b.target).find("input").not(d.keepNativeSelector()).each(function () {
                var b = a(this), d = this.getAttribute("type"),
                    g = c.degradeInputs[d] || "text";
                if (c.degradeInputs[d]) {
                    var h = a("<div>").html(b.clone()).html(), k = -1 < h.indexOf(" type=");
                    b.replaceWith(h.replace(k ? /\s+type=["']?\w+['"]?/ : /\/?>/, ' type="' + g + '" data-' + a.mobile.ns + 'type="' + d + '"' + (k ? "" : ">")))
                }
            }))
        })
    })(n);
    (function (a, m, b) {
        a.widget("mobile.dialog", a.mobile.widget, {options: {closeBtn: "left", closeBtnText: "Close", overlayTheme: "a", corners: !0, initSelector: ":jqmData(role='dialog')"}, _handlePageBeforeShow: function () {
            this._isCloseable = !0;
            this.options.overlayTheme &&
            this.element.page("removeContainerBackground").page("setContainerBackground", this.options.overlayTheme)
        }, _handlePageBeforeHide: function () {
            this._isCloseable = !1
        }, _create: function () {
            var b = this.element, c = a("<div/>", {role: "dialog", "class": "ui-dialog-contain ui-overlay-shadow" + (this.options.corners ? " ui-corner-all" : "")});
            b.addClass("ui-dialog ui-overlay-" + this.options.overlayTheme);
            b.wrapInner(c);
            b.bind("vclick submit", function (c) {
                c = a(c.target).closest("vclick" === c.type ? "a" : "form");
                var b;
                c.length && !c.jqmData("transition") &&
                (b = a.mobile.urlHistory.getActive() || {}, c.attr("data-" + a.mobile.ns + "transition", b.transition || a.mobile.defaultDialogTransition).attr("data-" + a.mobile.ns + "direction", "reverse"))
            });
            this._on(b, {pagebeforeshow: "_handlePageBeforeShow", pagebeforehide: "_handlePageBeforeHide"});
            a.extend(this, {_createComplete: !1});
            this._setCloseBtn(this.options.closeBtn)
        }, _setCloseBtn: function (b) {
            var c = this;
            this._headerCloseButton && (this._headerCloseButton.remove(), this._headerCloseButton = null);
            "none" !== b && (b = a("<a href='#' class='ui-btn-" +
                ("left" === b ? "left" : "right") + "' data-" + a.mobile.ns + "icon='delete' data-" + a.mobile.ns + "iconpos='notext'>" + this.options.closeBtnText + "</a>"), this.element.children().find(":jqmData(role='header')").first().prepend(b), this._createComplete && a.fn.buttonMarkup && b.buttonMarkup(), this._createComplete = !0, b.bind("click", function () {
                c.close()
            }), this._headerCloseButton = b)
        }, _setOption: function (a, c) {
            "closeBtn" === a && this._setCloseBtn(c);
            this._super(a, c)
        }, close: function () {
            var b, c, f = a.mobile.navigate.history;
            this._isCloseable &&
            (this._isCloseable = !1, a.mobile.hashListeningEnabled && 0 < f.activeIndex ? a.mobile.back() : (b = Math.max(0, f.activeIndex - 1), c = f.stack[b].pageUrl || f.stack[b].url, f.previousIndex = f.activeIndex, f.activeIndex = b, a.mobile.path.isPath(c) || (c = a.mobile.path.makeUrlAbsolute("#" + c)), a.mobile.changePage(c, {direction: "back", changeHash: !1, fromHashChange: !0})))
        }});
        a.mobile.document.delegate(a.mobile.dialog.prototype.options.initSelector, "pagecreate", function () {
            a.mobile.dialog.prototype.enhance(this)
        })
    })(n, this);
    (function (a, m) {
        a.mobile.page.prototype.options.backBtnText = "Back";
        a.mobile.page.prototype.options.addBackBtn = !1;
        a.mobile.page.prototype.options.backBtnTheme = null;
        a.mobile.page.prototype.options.headerTheme = "a";
        a.mobile.page.prototype.options.footerTheme = "a";
        a.mobile.page.prototype.options.contentTheme = null;
        a.mobile.document.bind("pagecreate", function (b) {
            var d = a(b.target), c = d.data("mobile-page").options, f = d.jqmData("role"), e = c.theme;
            a(":jqmData(role='header'), :jqmData(role='footer'), :jqmData(role='content')",
                d).jqmEnhanceable().each(function () {
                    var b = a(this), h = b.jqmData("role"), k = b.jqmData("theme"), l = k || c.contentTheme || "dialog" === f && e, m;
                    b.addClass("ui-" + h);
                    if ("header" === h || "footer" === h) {
                        var p = k || ("header" === h ? c.headerTheme : c.footerTheme) || e;
                        b.addClass("ui-bar-" + p).attr("role", "header" === h ? "banner" : "contentinfo");
                        "header" === h && (k = b.children("a, button"), m = k.hasClass("ui-btn-left"), l = k.hasClass("ui-btn-right"), m = m || k.eq(0).not(".ui-btn-right").addClass("ui-btn-left").length, l || k.eq(1).addClass("ui-btn-right"));
                        c.addBackBtn && ("header" === h && 1 < a(".ui-page").length && d.jqmData("url") !== a.mobile.path.stripHash(location.hash) && !m) && a("<a href='javascript:void(0);' class='ui-btn-left' data-" + a.mobile.ns + "rel='back' data-" + a.mobile.ns + "icon='arrow-l'>" + c.backBtnText + "</a>").attr("data-" + a.mobile.ns + "theme", c.backBtnTheme || p).prependTo(b);
                        b.children("h1, h2, h3, h4, h5, h6").addClass("ui-title").attr({role: "heading", "aria-level": "1"})
                    } else"content" === h && (l && b.addClass("ui-body-" + l), b.attr("role", "main"))
                })
        })
    })(n);
    (function (a, m) {
        function b(a) {
            for (var c; a && !((c = "string" === typeof a.className && a.className + " ") && -1 < c.indexOf("ui-btn ") && 0 > c.indexOf("ui-disabled "));)a = a.parentNode;
            return a
        }

        function d(c, b, d, f, l) {
            var s = a.data(c[0], "buttonElements");
            c.removeClass(b).addClass(d);
            s && (s.bcls = a(u.createElement("div")).addClass(s.bcls + " " + d).removeClass(b).attr("class"), f !== m && (s.hover = f), s.state = l)
        }

        var c = function (a, c) {
            var b = a.getAttribute(c);
            return"true" === b ? !0 : "false" === b ? !1 : null === b ? m : b
        };
        a.fn.buttonMarkup = function (b) {
            var d =
                "data-" + a.mobile.ns, h;
            b = b && "object" === a.type(b) ? b : {};
            for (var k = 0; k < this.length; k++) {
                var l = this.eq(k), s = l[0], p = a.extend({}, a.fn.buttonMarkup.defaults, {icon: b.icon !== m ? b.icon : c(s, d + "icon"), iconpos: b.iconpos !== m ? b.iconpos : c(s, d + "iconpos"), theme: b.theme !== m ? b.theme : c(s, d + "theme") || a.mobile.getInheritedTheme(l, "c"), inline: b.inline !== m ? b.inline : c(s, d + "inline"), shadow: b.shadow !== m ? b.shadow : c(s, d + "shadow"), corners: b.corners !== m ? b.corners : c(s, d + "corners"), iconshadow: b.iconshadow !== m ? b.iconshadow : c(s, d + "iconshadow"),
                    mini: b.mini !== m ? b.mini : c(s, d + "mini")}, b), r, v, n = !1, t = "up", q, y, z, w;
                for (h in p)p[h] === m || null === p[h] ? l.removeAttr(d + h) : s.setAttribute(d + h, p[h]);
                (w = a.data("INPUT" === s.tagName || "BUTTON" === s.tagName ? s.parentNode : s, "buttonElements")) ? (s = w.outer, l = a(s), q = w.inner, y = w.text, a(w.icon).remove(), w.icon = null, n = w.hover, t = w.state) : (q = u.createElement(p.wrapperEls), y = u.createElement(p.wrapperEls));
                z = p.icon ? u.createElement("span") : null;
                f && !w && f();
                p.theme || (p.theme = a.mobile.getInheritedTheme(l, "c"));
                r = "ui-btn ";
                r += n ?
                    "ui-btn-hover-" + p.theme : "";
                r += t ? " ui-btn-" + t + "-" + p.theme : "";
                r += p.shadow ? " ui-shadow" : "";
                r += p.corners ? " ui-btn-corner-all" : "";
                p.mini !== m && (r += !0 === p.mini ? " ui-mini" : " ui-fullsize");
                p.inline !== m && (r += !0 === p.inline ? " ui-btn-inline" : " ui-btn-block");
                p.icon && (p.icon = "ui-icon-" + p.icon, p.iconpos = p.iconpos || "left", v = "ui-icon " + p.icon, p.iconshadow && (v += " ui-icon-shadow"));
                p.iconpos && (r += " ui-btn-icon-" + p.iconpos, "notext" !== p.iconpos || l.attr("title") || l.attr("title", l.getEncodedText()));
                w && l.removeClass(w.bcls ||
                    "");
                l.removeClass("ui-link").addClass(r);
                q.className = "ui-btn-inner";
                y.className = "ui-btn-text";
                w || q.appendChild(y);
                z && (z.className = v, w && w.icon || (z.innerHTML = "&#160;", q.appendChild(z)));
                for (; s.firstChild && !w;)y.appendChild(s.firstChild);
                w || s.appendChild(q);
                w = {hover: n, state: t, bcls: r, outer: s, inner: q, text: y, icon: z};
                a.data(s, "buttonElements", w);
                a.data(q, "buttonElements", w);
                a.data(y, "buttonElements", w);
                z && a.data(z, "buttonElements", w)
            }
            return this
        };
        a.fn.buttonMarkup.defaults = {corners: !0, shadow: !0, iconshadow: !0,
            wrapperEls: "span"};
        var f = function () {
            var c = a.mobile.buttonMarkup.hoverDelay, g, h;
            a.mobile.document.bind({"vmousedown vmousecancel vmouseup vmouseover vmouseout focus blur scrollstart": function (f) {
                var l, s = a(b(f.target)), p = f.originalEvent && /^touch/.test(f.originalEvent.type);
                f = f.type;
                if (s.length)if (l = s.attr("data-" + a.mobile.ns + "theme"), "vmousedown" === f)p ? g = setTimeout(function () {
                    d(s, "ui-btn-up-" + l, "ui-btn-down-" + l, m, "down")
                }, c) : d(s, "ui-btn-up-" + l, "ui-btn-down-" + l, m, "down"); else if ("vmousecancel" === f ||
                    "vmouseup" === f)d(s, "ui-btn-down-" + l, "ui-btn-up-" + l, m, "up"); else if ("vmouseover" === f || "focus" === f)p ? h = setTimeout(function () {
                    d(s, "ui-btn-up-" + l, "ui-btn-hover-" + l, !0, "")
                }, c) : d(s, "ui-btn-up-" + l, "ui-btn-hover-" + l, !0, ""); else if ("vmouseout" === f || "blur" === f || "scrollstart" === f)d(s, "ui-btn-hover-" + l + " ui-btn-down-" + l, "ui-btn-up-" + l, !1, "up"), g && clearTimeout(g), h && clearTimeout(h)
            }, "focusin focus": function (c) {
                a(b(c.target)).addClass(a.mobile.focusClass)
            }, "focusout blur": function (c) {
                a(b(c.target)).removeClass(a.mobile.focusClass)
            }});
            f = null
        };
        a.mobile.document.bind("pagecreate create", function (c) {
            a(":jqmData(role='button'), .ui-bar > a, .ui-header > a, .ui-footer > a, .ui-bar > :jqmData(role='controlgroup') > a", c.target).jqmEnhanceable().not("button, input, .ui-btn, :jqmData(role='none'), :jqmData(role='nojs')").buttonMarkup()
        })
    })(n);
    (function (a, m) {
        a.widget("mobile.collapsible", a.mobile.widget, {options: {expandCueText: " click to expand contents", collapseCueText: " click to collapse contents", collapsed: !0, heading: "h1,h2,h3,h4,h5,h6,legend",
            collapsedIcon: "plus", expandedIcon: "minus", iconpos: "left", theme: null, contentTheme: null, inset: !0, corners: !0, mini: !1, initSelector: ":jqmData(role='collapsible')"}, _create: function () {
            var b = this.element, d = this.options, c = b.addClass("ui-collapsible"), f = b.children(d.heading).first(), e = c.wrapInner("<div class='ui-collapsible-content'></div>").children(".ui-collapsible-content"), g = b.closest(":jqmData(role='collapsible-set')").addClass("ui-collapsible-set"), h = "";
            f.is("legend") && (f = a("<div role='heading'>" + f.html() +
                "</div>").insertBefore(f), f.next().remove());
            g.length ? (d.theme || (d.theme = g.jqmData("theme") || a.mobile.getInheritedTheme(g, "c")), d.contentTheme || (d.contentTheme = g.jqmData("content-theme")), d.collapsedIcon = b.jqmData("collapsed-icon") || g.jqmData("collapsed-icon") || d.collapsedIcon, d.expandedIcon = b.jqmData("expanded-icon") || g.jqmData("expanded-icon") || d.expandedIcon, d.iconpos = b.jqmData("iconpos") || g.jqmData("iconpos") || d.iconpos, g.jqmData("inset") !== m ? d.inset = g.jqmData("inset") : d.inset = !0, d.corners = !1,
                d.mini || (d.mini = g.jqmData("mini"))) : d.theme || (d.theme = a.mobile.getInheritedTheme(b, "c"));
            d.inset && (h += " ui-collapsible-inset", d.corners && (h += " ui-corner-all"));
            d.contentTheme && (h += " ui-collapsible-themed-content", e.addClass("ui-body-" + d.contentTheme));
            "" !== h && c.addClass(h);
            f.insertBefore(e).addClass("ui-collapsible-heading").append("<span class='ui-collapsible-heading-status'></span>").wrapInner("<a href='#' class='ui-collapsible-heading-toggle'></a>").find("a").first().buttonMarkup({shadow: !1, corners: !1,
                iconpos: d.iconpos, icon: d.collapsedIcon, mini: d.mini, theme: d.theme});
            c.bind("expand collapse",function (c) {
                if (!c.isDefaultPrevented()) {
                    var b = a(this), g = "collapse" === c.type;
                    c.preventDefault();
                    f.toggleClass("ui-collapsible-heading-collapsed", g).find(".ui-collapsible-heading-status").text(g ? d.expandCueText : d.collapseCueText).end().find(".ui-icon").toggleClass("ui-icon-" + d.expandedIcon, !g).toggleClass("ui-icon-" + d.collapsedIcon, g || d.expandedIcon === d.collapsedIcon).end().find("a").first().removeClass(a.mobile.activeBtnClass);
                    b.toggleClass("ui-collapsible-collapsed", g);
                    e.toggleClass("ui-collapsible-content-collapsed", g).attr("aria-hidden", g);
                    e.trigger("updatelayout")
                }
            }).trigger(d.collapsed ? "collapse" : "expand");
            f.bind("tap",function (c) {
                f.find("a").first().addClass(a.mobile.activeBtnClass)
            }).bind("click", function (a) {
                var b = f.is(".ui-collapsible-heading-collapsed") ? "expand" : "collapse";
                c.trigger(b);
                a.preventDefault();
                a.stopPropagation()
            })
        }});
        a.mobile.document.bind("pagecreate create", function (b) {
            a.mobile.collapsible.prototype.enhanceWithin(b.target)
        })
    })(n);
    (function (a, m) {
        a.mobile.behaviors.addFirstLastClasses = {_getVisibles: function (a, d) {
            var c;
            d ? c = a.not(".ui-screen-hidden") : (c = a.filter(":visible"), 0 === c.length && (c = a.not(".ui-screen-hidden")));
            return c
        }, _addFirstLastClasses: function (a, d, c) {
            a.removeClass("ui-first-child ui-last-child");
            d.eq(0).addClass("ui-first-child").end().last().addClass("ui-last-child");
            c || this.element.trigger("updatelayout")
        }}
    })(n);
    (function (a, m) {
        a.widget("mobile.collapsibleset", a.mobile.widget, a.extend({options: {initSelector: ":jqmData(role='collapsible-set')"},
            _create: function () {
                var b = this.element.addClass("ui-collapsible-set"), d = this.options;
                d.theme || (d.theme = a.mobile.getInheritedTheme(b, "c"));
                d.contentTheme || (d.contentTheme = b.jqmData("content-theme"));
                d.corners || (d.corners = b.jqmData("corners"));
                b.jqmData("inset") !== m && (d.inset = b.jqmData("inset"));
                d.inset = d.inset !== m ? d.inset : !0;
                d.corners = d.corners !== m ? d.corners : !0;
                d.corners && d.inset && b.addClass("ui-corner-all");
                b.jqmData("collapsiblebound") || b.jqmData("collapsiblebound", !0).bind("expand", function (c) {
                    c =
                        a(c.target).closest(".ui-collapsible");
                    c.parent().is(":jqmData(role='collapsible-set')") && c.siblings(".ui-collapsible").trigger("collapse")
                })
            }, _init: function () {
                var a = this.element.children(":jqmData(role='collapsible')").filter(":jqmData(collapsed='false')");
                this._refresh("true");
                a.trigger("expand")
            }, _refresh: function (b) {
                var d = this.element.children(":jqmData(role='collapsible')");
                a.mobile.collapsible.prototype.enhance(d.not(".ui-collapsible"));
                this._addFirstLastClasses(d, this._getVisibles(d, b), b)
            },
            refresh: function () {
                this._refresh(!1)
            }}, a.mobile.behaviors.addFirstLastClasses));
        a.mobile.document.bind("pagecreate create", function (b) {
            a.mobile.collapsibleset.prototype.enhanceWithin(b.target)
        })
    })(n);
    (function (a, m) {
        a.fn.fieldcontain = function (a) {
            return this.addClass("ui-field-contain ui-body ui-br").contents().filter(function () {
                return 3 === this.nodeType && !/\S/.test(this.nodeValue)
            }).remove()
        };
        a(u).bind("pagecreate create", function (b) {
            a(":jqmData(role='fieldcontain')", b.target).jqmEnhanceable().fieldcontain()
        })
    })(n);
    (function (a, m) {
        a.fn.grid = function (b) {
            return this.each(function () {
                var d = a(this), c = a.extend({grid: null}, b), f = d.children(), e = {solo: 1, a: 2, b: 3, c: 4, d: 5}, c = c.grid;
                if (!c)if (5 >= f.length)for (var g in e)e[g] === f.length && (c = g); else c = "a", d.addClass("ui-grid-duo");
                e = e[c];
                d.addClass("ui-grid-" + c);
                f.filter(":nth-child(" + e + "n+1)").addClass("ui-block-a");
                1 < e && f.filter(":nth-child(" + e + "n+2)").addClass("ui-block-b");
                2 < e && f.filter(":nth-child(" + e + "n+3)").addClass("ui-block-c");
                3 < e && f.filter(":nth-child(" + e + "n+4)").addClass("ui-block-d");
                4 < e && f.filter(":nth-child(" + e + "n+5)").addClass("ui-block-e")
            })
        }
    })(n);
    (function (a, m) {
        a.widget("mobile.navbar", a.mobile.widget, {options: {iconpos: "top", grid: null, initSelector: ":jqmData(role='navbar')"}, _create: function () {
            var b = this.element, d = b.find("a"), c = d.filter(":jqmData(icon)").length ? this.options.iconpos : m;
            b.addClass("ui-navbar ui-mini").attr("role", "navigation").find("ul").jqmEnhanceable().grid({grid: this.options.grid});
            d.buttonMarkup({corners: !1, shadow: !1, inline: !0, iconpos: c});
            b.delegate("a",
                "vclick", function (c) {
                    if (!(a(c.target).is("a") ? a(this) : a(this).parent("a")).is(".ui-disabled, .ui-btn-active")) {
                        d.removeClass(a.mobile.activeBtnClass);
                        a(this).addClass(a.mobile.activeBtnClass);
                        var b = a(this);
                        a(u).one("pagehide", function () {
                            b.removeClass(a.mobile.activeBtnClass)
                        })
                    }
                });
            b.closest(".ui-page").bind("pagebeforeshow", function () {
                d.filter(".ui-state-persist").addClass(a.mobile.activeBtnClass)
            })
        }});
        a.mobile.document.bind("pagecreate create", function (b) {
            a.mobile.navbar.prototype.enhanceWithin(b.target)
        })
    })(n);
    (function (a, m) {
        var b = {};
        a.widget("mobile.listview", a.mobile.widget, a.extend({options: {theme: null, countTheme: "c", headerTheme: "b", dividerTheme: "b", icon: "arrow-r", splitIcon: "arrow-r", splitTheme: "b", corners: !0, shadow: !0, inset: !1, initSelector: ":jqmData(role='listview')"}, _create: function () {
            var a = "", a = a + (this.options.inset ? " ui-listview-inset" : "");
            this.options.inset && (a += this.options.corners ? " ui-corner-all" : "", a += this.options.shadow ? " ui-shadow" : "");
            this.element.addClass(function (c, b) {
                return b + " ui-listview" +
                    a
            });
            this.refresh(!0)
        }, _findFirstElementByTagName: function (a, c, b, e) {
            var g = {};
            for (g[b] = g[e] = !0; a;) {
                if (g[a.nodeName])return a;
                a = a[c]
            }
            return null
        }, _getChildrenByTagName: function (b, c, f) {
            var e = [], g = {};
            g[c] = g[f] = !0;
            for (b = b.firstChild; b;)g[b.nodeName] && e.push(b), b = b.nextSibling;
            return a(e)
        }, _addThumbClasses: function (b) {
            var c, f, e = b.length;
            for (c = 0; c < e; c++)f = a(this._findFirstElementByTagName(b[c].firstChild, "nextSibling", "img", "IMG")), f.length && (f.addClass("ui-li-thumb"), a(this._findFirstElementByTagName(f[0].parentNode,
                "parentNode", "li", "LI")).addClass(f.is(".ui-li-icon") ? "ui-li-has-icon" : "ui-li-has-thumb"))
        }, refresh: function (b) {
            this.parentPage = this.element.closest(".ui-page");
            this._createSubPages();
            var c = this.options, f = this.element, e = f.jqmData("dividertheme") || c.dividerTheme, g = f.jqmData("splittheme"), h = f.jqmData("spliticon"), k = f.jqmData("icon"), l = this._getChildrenByTagName(f[0], "li", "LI"), m = !!a.nodeName(f[0], "ol"), p = !a.support.cssPseudoElement, r = f.attr("start"), n = {}, q, t, x, y, z, w, A, B;
            m && p && f.find(".ui-li-dec").remove();
            m && (r || 0 === r ? p ? w = parseInt(r, 10) : (q = parseInt(r, 10) - 1, f.css("counter-reset", "listnumbering " + q)) : p && (w = 1));
            c.theme || (c.theme = a.mobile.getInheritedTheme(this.element, "c"));
            for (var E = 0, D = l.length; E < D; E++) {
                q = l.eq(E);
                t = "ui-li";
                if (b || !q.hasClass("ui-li"))x = q.jqmData("theme") || c.theme, y = this._getChildrenByTagName(q[0], "a", "A"), A = "list-divider" === q.jqmData("role"), y.length && !A ? (A = q.jqmData("icon"), q.buttonMarkup({wrapperEls: "div", shadow: !1, corners: !1, iconpos: "right", icon: 1 < y.length || !1 === A ? !1 : A || k || c.icon,
                    theme: x}), !1 !== A && 1 === y.length && q.addClass("ui-li-has-arrow"), y.first().removeClass("ui-link").addClass("ui-link-inherit"), 1 < y.length && (t += " ui-li-has-alt", y = y.last(), z = g || y.jqmData("theme") || c.splitTheme, B = y.jqmData("icon"), y.appendTo(q).attr("title", a.trim(y.getEncodedText())).addClass("ui-li-link-alt").empty().buttonMarkup({shadow: !1, corners: !1, theme: x, icon: !1, iconpos: "notext"}).find(".ui-btn-inner").append(a(u.createElement("span")).buttonMarkup({shadow: !0, corners: !0, theme: z, iconpos: "notext",
                    icon: B || A || h || c.splitIcon})))) : A ? (t += " ui-li-divider ui-bar-" + (q.jqmData("theme") || e), q.attr("role", "heading"), m && (r || 0 === r ? p ? w = parseInt(r, 10) : (x = parseInt(r, 10) - 1, q.css("counter-reset", "listnumbering " + x)) : p && (w = 1))) : t += " ui-li-static ui-btn-up-" + x;
                m && (p && 0 > t.indexOf("ui-li-divider")) && (x = 0 < t.indexOf("ui-li-static") ? q : q.find(".ui-link-inherit"), x.addClass("ui-li-jsnumbering").prepend("<span class='ui-li-dec'>" + w++ + ". </span>"));
                n[t] || (n[t] = []);
                n[t].push(q[0])
            }
            for (t in n)a(n[t]).addClass(t).children(".ui-btn-inner").addClass(t);
            f.find("h1, h2, h3, h4, h5, h6").addClass("ui-li-heading").end().find("p, dl").addClass("ui-li-desc").end().find(".ui-li-aside").each(function () {
                var c = a(this);
                c.prependTo(c.parent())
            }).end().find(".ui-li-count").each(function () {
                a(this).closest("li").addClass("ui-li-has-count")
            }).addClass("ui-btn-up-" + (f.jqmData("counttheme") || this.options.countTheme) + " ui-btn-corner-all");
            this._addThumbClasses(l);
            this._addThumbClasses(f.find(".ui-link-inherit"));
            this._addFirstLastClasses(l, this._getVisibles(l, b),
                b);
            this._trigger("afterrefresh")
        }, _idStringEscape: function (a) {
            return a.replace(/[^a-zA-Z0-9]/g, "-")
        }, _createSubPages: function () {
            var d = this.element, c = d.closest(".ui-page"), f = c.jqmData("url"), e = f || c[0][a.expando], g = d.attr("id"), h = this.options, k = "data-" + a.mobile.ns, l = this, m = c.find(":jqmData(role='footer')").jqmData("id"), p;
            "undefined" === typeof b[e] && (b[e] = -1);
            g = g || ++b[e];
            a(d.find("li>ul, li>ol").toArray().reverse()).each(function (c) {
                var b = a(this), e = b.attr("id") || g + "-" + c;
                c = b.parent();
                var l = a(b.prevAll().toArray().reverse()),
                    l = l.length ? l : a("<span>" + a.trim(c.contents()[0].nodeValue) + "</span>"), n = l.first().getEncodedText(), e = (f || "") + "&" + a.mobile.subPageUrlKey + "=" + e, q = b.jqmData("theme") || h.theme, u = b.jqmData("counttheme") || d.jqmData("counttheme") || h.countTheme;
                p = !0;
                b.detach().wrap("<div " + k + "role='page' " + k + "url='" + e + "' " + k + "theme='" + q + "' " + k + "count-theme='" + u + "'><div " + k + "role='content'></div></div>").parent().before("<div " + k + "role='header' " + k + "theme='" + h.headerTheme + "'><div class='ui-title'>" + n + "</div></div>").after(m ?
                    a("<div " + k + "role='footer' " + k + "id='" + m + "'>") : "").parent().appendTo(a.mobile.pageContainer).page();
                b = c.find("a:first");
                b.length || (b = a("<a/>").html(l || n).prependTo(c.empty()));
                b.attr("href", "#" + e)
            }).listview();
            p && (c.is(":jqmData(external-page='true')") && !1 === c.data("mobile-page").options.domCache) && c.unbind("pagehide.remove").bind("pagehide.remove", function (b, d) {
                var e = d.nextPage, g = new a.Event("pageremove");
                d.nextPage && (e = e.jqmData("url"), 0 !== e.indexOf(f + "&" + a.mobile.subPageUrlKey) && (l.childPages().remove(),
                    c.trigger(g), g.isDefaultPrevented() || c.removeWithDependents()))
            })
        }, childPages: function () {
            var b = this.parentPage.jqmData("url");
            return a(":jqmData(url^='" + b + "&" + a.mobile.subPageUrlKey + "')")
        }}, a.mobile.behaviors.addFirstLastClasses));
        a.mobile.document.bind("pagecreate create", function (b) {
            a.mobile.listview.prototype.enhanceWithin(b.target)
        })
    })(n);
    (function (a) {
        var m = a("meta[name=viewport]"), b = m.attr("content"), d = b + ",maximum-scale=1, user-scalable=no", c = b + ",maximum-scale=10, user-scalable=yes", f = /(user-scalable[\s]*=[\s]*no)|(maximum-scale[\s]*=[\s]*1)[$,\s]/.test(b);
        a.mobile.zoom = a.extend({}, {enabled: !f, locked: !1, disable: function (b) {
            f || a.mobile.zoom.locked || (m.attr("content", d), a.mobile.zoom.enabled = !1, a.mobile.zoom.locked = b || !1)
        }, enable: function (b) {
            f || a.mobile.zoom.locked && !0 !== b || (m.attr("content", c), a.mobile.zoom.enabled = !0, a.mobile.zoom.locked = !1)
        }, restore: function () {
            f || (m.attr("content", b), a.mobile.zoom.enabled = !0)
        }})
    })(n);
    (function (a, m) {
        a.widget("mobile.textinput", a.mobile.widget, {options: {theme: null, mini: !1, preventFocusZoom: /iPhone|iPad|iPod/.test(navigator.platform) &&
            -1 < navigator.userAgent.indexOf("AppleWebKit"), initSelector: "input[type='text'], input[type='search'], :jqmData(type='search'), input[type='number'], :jqmData(type='number'), input[type='password'], input[type='email'], input[type='url'], input[type='tel'], textarea, input[type='time'], input[type='date'], input[type='month'], input[type='week'], input[type='datetime'], input[type='datetime-local'], input[type='color'], input:not([type]), input[type='file']", clearBtn: !1, clearSearchButtonText: null,
            clearBtnText: "clear text", disabled: !1}, _create: function () {
            function b() {
                setTimeout(function () {
                    m.toggleClass("ui-input-clear-hidden", !c.val())
                }, 0)
            }

            var d = this, c = this.element, f = this.options, e = f.theme || a.mobile.getInheritedTheme(this.element, "c"), g = " ui-body-" + e, h = f.mini ? " ui-mini" : "", k = c.is("[type='search'], :jqmData(type='search')"), l, m, p = f.clearSearchButtonText || f.clearBtnText, r = c.is("textarea, :jqmData(type='range')"), r = !!f.clearBtn && !r, n = c.is("input") && !c.is(":jqmData(type='range')");
            a("label[for='" +
                c.attr("id") + "']").addClass("ui-input-text");
            l = c.addClass("ui-input-text ui-body-" + e);
            "undefined" === typeof c[0].autocorrect || a.support.touchOverflow || (c[0].setAttribute("autocorrect", "off"), c[0].setAttribute("autocomplete", "off"));
            k ? l = c.wrap("<div class='ui-input-search ui-shadow-inset ui-btn-corner-all ui-btn-shadow ui-icon-searchfield" + g + h + "'></div>").parent() : n && (l = c.wrap("<div class='ui-input-text ui-shadow-inset ui-corner-all ui-btn-shadow" + g + h + "'></div>").parent());
            r || k ? (m = a("<a href='#' class='ui-input-clear' title='" +
                p + "'>" + p + "</a>").bind("click",function (a) {
                    c.val("").focus().trigger("change");
                    m.addClass("ui-input-clear-hidden");
                    a.preventDefault()
                }).appendTo(l).buttonMarkup({icon: "delete", iconpos: "notext", corners: !0, shadow: !0, mini: f.mini}), k || l.addClass("ui-input-has-clear"), b(), c.bind("paste cut keyup input focus change blur", b)) : n || k || c.addClass("ui-corner-all ui-shadow-inset" + g + h);
            c.focus(function () {
                f.preventFocusZoom && a.mobile.zoom.disable(!0);
                l.addClass(a.mobile.focusClass)
            }).blur(function () {
                l.removeClass(a.mobile.focusClass);
                f.preventFocusZoom && a.mobile.zoom.enable(!0)
            });
            if (c.is("textarea")) {
                var q;
                this._keyup = function () {
                    var a = c[0].scrollHeight;
                    if (c[0].clientHeight < a) {
                        var b = parseFloat(c.css("padding-top")), d = parseFloat(c.css("padding-bottom"));
                        c.height(a - (b + d) + 15)
                    }
                };
                c.on("keyup change input paste", function () {
                    clearTimeout(q);
                    q = setTimeout(d._keyup, 100)
                });
                this._on(!0, a.mobile.document, {pagechange: "_keyup"});
                a.trim(c.val()) && this._on(!0, a.mobile.window, {load: "_keyup"})
            }
            c.attr("disabled") && this.disable()
        }, disable: function () {
            var a =
                this.element.is("[type='search'], :jqmData(type='search')"), d = this.element.is("input") && !this.element.is(":jqmData(type='range')");
            (this.element.attr("disabled", !0) && (d || a) ? this.element.parent() : this.element).addClass("ui-disabled");
            return this._setOption("disabled", !0)
        }, enable: function () {
            var a = this.element.is("[type='search'], :jqmData(type='search')"), d = this.element.is("input") && !this.element.is(":jqmData(type='range')");
            (this.element.attr("disabled", !1) && (d || a) ? this.element.parent() : this.element).removeClass("ui-disabled");
            return this._setOption("disabled", !1)
        }});
        a.mobile.document.bind("pagecreate create", function (b) {
            a.mobile.textinput.prototype.enhanceWithin(b.target, !0)
        })
    })(n);
    (function (a, m) {
        a.mobile.listview.prototype.options.filter = !1;
        a.mobile.listview.prototype.options.filterPlaceholder = "Filter items...";
        a.mobile.listview.prototype.options.filterTheme = "c";
        a.mobile.listview.prototype.options.filterReveal = !1;
        var b = function (a, b, f) {
            return-1 === a.toString().toLowerCase().indexOf(b)
        };
        a.mobile.listview.prototype.options.filterCallback =
            b;
        a.mobile.document.delegate("ul, ol", "listviewcreate", function () {
            var d = a(this), c = d.data("mobile-listview");
            if (c && c.options.filter) {
                c.options.filterReveal && d.children().addClass("ui-screen-hidden");
                var f = a("<form>", {"class": "ui-listview-filter ui-bar-" + c.options.filterTheme, role: "search"}).submit(function (a) {
                    a.preventDefault();
                    e.blur()
                }), e = a("<input>", {placeholder: c.options.filterPlaceholder}).attr("data-" + a.mobile.ns + "type", "search").jqmData("lastval", "").bind("keyup change input",function (e) {
                    var f =
                        a(this);
                    e = this.value.toLowerCase();
                    var k = null, l = d.children(), k = f.jqmData("lastval") + "", m = !1, p = "", p = c.options.filterCallback !== b;
                    if (!k || k !== e) {
                        c._trigger("beforefilter", "beforefilter", {input: this});
                        f.jqmData("lastval", e);
                        p || e.length < k.length || 0 !== e.indexOf(k) ? k = d.children() : (k = d.children(":not(.ui-screen-hidden)"), !k.length && c.options.filterReveal && (k = d.children(".ui-screen-hidden")));
                        if (e) {
                            for (var r = k.length - 1; 0 <= r; r--)f = a(k[r]), p = f.jqmData("filtertext") || f.text(), f.is("li:jqmData(role=list-divider)") ?
                                (f.toggleClass("ui-filter-hidequeue", !m), m = !1) : c.options.filterCallback(p, e, f) ? f.toggleClass("ui-filter-hidequeue", !0) : m = !0;
                            k.filter(":not(.ui-filter-hidequeue)").toggleClass("ui-screen-hidden", !1);
                            k.filter(".ui-filter-hidequeue").toggleClass("ui-screen-hidden", !0).toggleClass("ui-filter-hidequeue", !1)
                        } else k.toggleClass("ui-screen-hidden", !!c.options.filterReveal);
                        c._addFirstLastClasses(l, c._getVisibles(l, !1), !1)
                    }
                }).appendTo(f).textinput();
                c.options.inset && f.addClass("ui-listview-filter-inset");
                f.bind("submit",function () {
                    return!1
                }).insertBefore(d)
            }
        })
    })(n);
    (function (a, m) {
        a.mobile.listview.prototype.options.autodividers = !1;
        a.mobile.listview.prototype.options.autodividersSelector = function (b) {
            b = a.trim(b.text()) || null;
            return b ? b = b.slice(0, 1).toUpperCase() : null
        };
        a.mobile.document.delegate("ul,ol", "listviewcreate", function () {
            var b = a(this), d = b.data("mobile-listview");
            if (d && d.options.autodividers) {
                var c = function () {
                    b.unbind("listviewafterrefresh", c);
                    b.find("li:jqmData(role='list-divider')").remove();
                    for (var f = b.find("li"), e = null, g, h, k = 0; k < f.length; k++)g = f[k], (h = d.options.autodividersSelector(a(g))) && e !== h && (e = u.createElement("li"), e.appendChild(u.createTextNode(h)), e.setAttribute("data-" + a.mobile.ns + "role", "list-divider"), g.parentNode.insertBefore(e, g)), e = h;
                    d.refresh();
                    b.bind("listviewafterrefresh", c)
                };
                c()
            }
        })
    })(n);
    (function (a, m) {
        a(u).bind("pagecreate create", function (b) {
            a(":jqmData(role='nojs')", b.target).addClass("ui-nojs")
        })
    })(n);
    (function (a, m) {
        a.mobile.behaviors.formReset = {_handleFormReset: function () {
            this._on(this.element.closest("form"),
                {reset: function () {
                    this._delay("_reset")
                }})
        }}
    })(n);
    (function (a, m) {
        a.widget("mobile.checkboxradio", a.mobile.widget, a.extend({options: {theme: null, mini: !1, initSelector: "input[type='checkbox'],input[type='radio']"}, _create: function () {
            var b = this, d = this.element, c = this.options, f = a(d).closest("label"), e = f.length ? f : a(d).closest("form, fieldset, :jqmData(role='page'), :jqmData(role='dialog')").find("label").filter("[for='" + d[0].id + "']").first(), g = d[0].type, f = d.jqmData("mini") || d.closest("form, fieldset").jqmData("mini") ||
                c.mini, h = g + "-on", k = g + "-off", l = d.jqmData("iconpos") || d.closest("form, fieldset").jqmData("iconpos");
            if ("checkbox" === g || "radio" === g)a.extend(this, {label: e, inputtype: g, checkedClass: "ui-" + h, uncheckedClass: "ui-" + k, checkedicon: h, uncheckedicon: k}), c.theme || (c.theme = a.mobile.getInheritedTheme(this.element, "c")), e.buttonMarkup({theme: c.theme, icon: k, shadow: !1, mini: f, iconpos: l}), c = u.createElement("div"), c.className = "ui-" + g, d.add(e).wrapAll(c), e.bind({vmouseover: function (b) {
                a(this).parent().is(".ui-disabled") &&
                b.stopPropagation()
            }, vclick: function (a) {
                if (d.is(":disabled"))a.preventDefault(); else return b._cacheVals(), d.prop("checked", "radio" === g && !0 || !d.prop("checked")), d.triggerHandler("click"), b._getInputSet().not(d).prop("checked", !1), b._updateAll(), !1
            }}), d.bind({vmousedown: function () {
                b._cacheVals()
            }, vclick: function () {
                var c = a(this);
                c.is(":checked") ? (c.prop("checked", !0), b._getInputSet().not(c).prop("checked", !1)) : c.prop("checked", !1);
                b._updateAll()
            }, focus: function () {
                e.addClass(a.mobile.focusClass)
            }, blur: function () {
                e.removeClass(a.mobile.focusClass)
            }}),
                this._handleFormReset(), this.refresh()
        }, _cacheVals: function () {
            this._getInputSet().each(function () {
                a(this).jqmData("cacheVal", this.checked)
            })
        }, _getInputSet: function () {
            return"checkbox" === this.inputtype ? this.element : this.element.closest("form, :jqmData(role='page'), :jqmData(role='dialog')").find("input[name='" + this.element[0].name + "'][type='" + this.inputtype + "']")
        }, _updateAll: function () {
            var b = this;
            this._getInputSet().each(function () {
                var d = a(this);
                (this.checked || "checkbox" === b.inputtype) && d.trigger("change")
            }).checkboxradio("refresh")
        },
            _reset: function () {
                this.refresh()
            }, refresh: function () {
                var b = this.element[0], d = " " + a.mobile.activeBtnClass, c = this.checkedClass + (this.element.parents(".ui-controlgroup-horizontal").length ? d : ""), f = this.label;
                b.checked ? f.removeClass(this.uncheckedClass + d).addClass(c).buttonMarkup({icon: this.checkedicon}) : f.removeClass(c).addClass(this.uncheckedClass).buttonMarkup({icon: this.uncheckedicon});
                b.disabled ? this.disable() : this.enable()
            }, disable: function () {
                this.element.prop("disabled", !0).parent().addClass("ui-disabled")
            },
            enable: function () {
                this.element.prop("disabled", !1).parent().removeClass("ui-disabled")
            }}, a.mobile.behaviors.formReset));
        a.mobile.document.bind("pagecreate create", function (b) {
            a.mobile.checkboxradio.prototype.enhanceWithin(b.target, !0)
        })
    })(n);
    (function (a, m) {
        a.widget("mobile.button", a.mobile.widget, {options: {theme: null, icon: null, iconpos: null, corners: !0, shadow: !0, iconshadow: !0, inline: null, mini: null, initSelector: "button, [type='button'], [type='submit'], [type='reset']"}, _create: function () {
            var b = this.element,
                d, c = function (a) {
                    var b, c = {};
                    for (b in a)null !== a[b] && "initSelector" !== b && (c[b] = a[b]);
                    return c
                }(this.options), f = "";
            if ("A" === b[0].tagName)b.hasClass("ui-btn") || b.buttonMarkup(); else {
                this.options.theme || (this.options.theme = a.mobile.getInheritedTheme(this.element, "c"));
                ~b[0].className.indexOf("ui-btn-left") && (f = "ui-btn-left");
                ~b[0].className.indexOf("ui-btn-right") && (f = "ui-btn-right");
                if ("submit" === b.attr("type") || "reset" === b.attr("type"))f = f ? f + " ui-submit" : "ui-submit";
                a("label[for='" + b.attr("id") + "']").addClass("ui-submit");
                d = this.button = a("<div></div>")[b.html() ? "html" : "text"](b.html() || b.val()).insertBefore(b).buttonMarkup(c).addClass(f).append(b.addClass("ui-btn-hidden"));
                b.bind({focus: function () {
                    d.addClass(a.mobile.focusClass)
                }, blur: function () {
                    d.removeClass(a.mobile.focusClass)
                }});
                this.refresh()
            }
        }, _setOption: function (b, d) {
            var c = {};
            c[b] = d;
            "initSelector" !== b && (this.button.buttonMarkup(c), this.element.attr("data-" + (a.mobile.ns || "") + b.replace(/([A-Z])/, "-$1").toLowerCase(), d));
            this._super("_setOption", b, d)
        }, enable: function () {
            this.element.attr("disabled",
                !1);
            this.button.removeClass("ui-disabled").attr("aria-disabled", !1);
            return this._setOption("disabled", !1)
        }, disable: function () {
            this.element.attr("disabled", !0);
            this.button.addClass("ui-disabled").attr("aria-disabled", !0);
            return this._setOption("disabled", !0)
        }, refresh: function () {
            var b = this.element;
            b.prop("disabled") ? this.disable() : this.enable();
            a(this.button.data("buttonElements").text)[b.html() ? "html" : "text"](b.html() || b.val())
        }});
        a.mobile.document.bind("pagecreate create", function (b) {
            a.mobile.button.prototype.enhanceWithin(b.target,
                !0)
        })
    })(n);
    (function (a, m) {
        a.widget("mobile.slider", a.mobile.widget, a.extend({widgetEventPrefix: "slide", options: {theme: null, trackTheme: null, disabled: !1, initSelector: "input[type='range'], :jqmData(type='range'), :jqmData(role='slider')", mini: !1, highlight: !1}, _create: function () {
            var b = this.element, d = a.mobile.getInheritedTheme(b, "c"), c = this.options.theme || d, d = this.options.trackTheme || d, f = b[0].nodeName.toLowerCase();
            this.isToggleSwitch = "select" === f;
            var e = b.parent().is(":jqmData(role='rangeslider')"), g =
                this.isToggleSwitch ? "ui-slider-switch" : "", h = b.attr("id"), k = a("[for='" + h + "']"), l = k.attr("id") || h + "-label", k = k.attr("id", l), s = this.isToggleSwitch ? 0 : parseFloat(b.attr("min")), p = this.isToggleSwitch ? b.find("option").length - 1 : parseFloat(b.attr("max")), r = q.parseFloat(b.attr("step") || 1), n = this.options.mini || b.jqmData("mini") ? " ui-mini" : "", C = u.createElement("a"), h = a(C), t = u.createElement("div"), x = a(t), y = this.options.highlight && !this.isToggleSwitch ? function () {
                var b = u.createElement("div");
                b.className = "ui-slider-bg " +
                    a.mobile.activeBtnClass + " ui-btn-corner-all";
                return a(b).prependTo(x)
            }() : !1;
            C.setAttribute("href", "#");
            t.setAttribute("role", "application");
            t.className = [this.isToggleSwitch ? "ui-slider " : "ui-slider-track ", g, " ui-btn-down-", d, " ui-btn-corner-all", n].join("");
            C.className = "ui-slider-handle";
            t.appendChild(C);
            h.buttonMarkup({corners: !0, theme: c, shadow: !0}).attr({role: "slider", "aria-valuemin": s, "aria-valuemax": p, "aria-valuenow": this._value(), "aria-valuetext": this._value(), title: this._value(), "aria-labelledby": l});
            a.extend(this, {slider: x, handle: h, type: f, step: r, max: p, min: s, valuebg: y, isRangeslider: e, dragging: !1, beforeStart: null, userModified: !1, mouseMoved: !1});
            if (this.isToggleSwitch) {
                c = u.createElement("div");
                c.className = "ui-slider-inneroffset";
                f = 0;
                for (g = t.childNodes.length; f < g; f++)c.appendChild(t.childNodes[f]);
                t.appendChild(c);
                h.addClass("ui-slider-handle-snapping");
                c = b.find("option");
                h = 0;
                for (t = c.length; h < t; h++)f = h ? "a" : "b", g = h ? " " + a.mobile.activeBtnClass : " ui-btn-down-" + d, u.createElement("div"), l = u.createElement("span"),
                    l.className = ["ui-slider-label ui-slider-label-", f, g, " ui-btn-corner-all"].join(""), l.setAttribute("role", "img"), l.appendChild(u.createTextNode(c[h].innerHTML)), a(l).prependTo(x);
                this._labels = a(".ui-slider-label", x)
            }
            k.addClass("ui-slider");
            b.addClass(this.isToggleSwitch ? "ui-slider-switch" : "ui-slider-input");
            this._on(b, {change: "_controlChange", keyup: "_controlKeyup", blur: "_controlBlur", vmouseup: "_controlVMouseUp"});
            x.bind("vmousedown", a.proxy(this._sliderVMouseDown, this)).bind("vclick", !1);
            this._on(u,
                {vmousemove: "_preventDocumentDrag"});
            this._on(x.add(u), {vmouseup: "_sliderVMouseUp"});
            x.insertAfter(b);
            this.isToggleSwitch || e || (c = this.options.mini ? "<div class='ui-slider ui-mini'>" : "<div class='ui-slider'>", b.add(x).wrapAll(c));
            this.isToggleSwitch && this.handle.bind({focus: function () {
                x.addClass(a.mobile.focusClass)
            }, blur: function () {
                x.removeClass(a.mobile.focusClass)
            }});
            this._on(this.handle, {vmousedown: "_handleVMouseDown", keydown: "_handleKeydown", keyup: "_handleKeyup"});
            this.handle.bind("vclick", !1);
            this._handleFormReset();
            this.refresh(m, m, !0)
        }, _controlChange: function (a) {
            if (!1 === this._trigger("controlchange", a))return!1;
            this.mouseMoved || this.refresh(this._value(), !0)
        }, _controlKeyup: function (a) {
            this.refresh(this._value(), !0, !0)
        }, _controlBlur: function (a) {
            this.refresh(this._value(), !0)
        }, _controlVMouseUp: function (a) {
            this._checkedRefresh()
        }, _handleVMouseDown: function (a) {
            this.handle.focus()
        }, _handleKeydown: function (b) {
            var d = this._value();
            if (!this.options.disabled) {
                switch (b.keyCode) {
                    case a.mobile.keyCode.HOME:
                    case a.mobile.keyCode.END:
                    case a.mobile.keyCode.PAGE_UP:
                    case a.mobile.keyCode.PAGE_DOWN:
                    case a.mobile.keyCode.UP:
                    case a.mobile.keyCode.RIGHT:
                    case a.mobile.keyCode.DOWN:
                    case a.mobile.keyCode.LEFT:
                        b.preventDefault(),
                            this._keySliding || (this._keySliding = !0, this.handle.addClass("ui-state-active"))
                }
                switch (b.keyCode) {
                    case a.mobile.keyCode.HOME:
                        this.refresh(this.min);
                        break;
                    case a.mobile.keyCode.END:
                        this.refresh(this.max);
                        break;
                    case a.mobile.keyCode.PAGE_UP:
                    case a.mobile.keyCode.UP:
                    case a.mobile.keyCode.RIGHT:
                        this.refresh(d + this.step);
                        break;
                    case a.mobile.keyCode.PAGE_DOWN:
                    case a.mobile.keyCode.DOWN:
                    case a.mobile.keyCode.LEFT:
                        this.refresh(d - this.step)
                }
            }
        }, _handleKeyup: function (a) {
            this._keySliding && (this._keySliding = !1,
                this.handle.removeClass("ui-state-active"))
        }, _sliderVMouseDown: function (a) {
            if (this.options.disabled || 1 !== a.which && 0 !== a.which && a.which !== m || !1 === this._trigger("beforestart", a))return!1;
            this.dragging = !0;
            this.mouseMoved = this.userModified = !1;
            this.isToggleSwitch && (this.beforeStart = this.element[0].selectedIndex);
            this.refresh(a);
            this._trigger("start");
            return!1
        }, _sliderVMouseUp: function () {
            if (this.dragging)return this.dragging = !1, this.isToggleSwitch && (this.handle.addClass("ui-slider-handle-snapping"), this.mouseMoved ?
                this.userModified ? this.refresh(0 === this.beforeStart ? 1 : 0) : this.refresh(this.beforeStart) : this.refresh(0 === this.beforeStart ? 1 : 0)), this.mouseMoved = !1, this._trigger("stop"), !1
        }, _preventDocumentDrag: function (a) {
            if (!1 === this._trigger("drag", a))return!1;
            if (this.dragging && !this.options.disabled)return this.mouseMoved = !0, this.isToggleSwitch && this.handle.removeClass("ui-slider-handle-snapping"), this.refresh(a), this.userModified = this.beforeStart !== this.element[0].selectedIndex, !1
        }, _checkedRefresh: function () {
            this.value !==
                this._value() && this.refresh(this._value())
        }, _value: function () {
            return this.isToggleSwitch ? this.element[0].selectedIndex : parseFloat(this.element.val())
        }, _reset: function () {
            this.refresh(m, !1, !0)
        }, refresh: function (b, d, c) {
            var f = this, e = a.mobile.getInheritedTheme(this.element, "c"), g = this.options.theme || e, h, k, l;
            f.slider[0].className = [this.isToggleSwitch ? "ui-slider ui-slider-switch" : "ui-slider-track", " ui-btn-down-" + (this.options.trackTheme || e), " ui-btn-corner-all", this.options.mini ? " ui-mini" : ""].join("");
            (this.options.disabled || this.element.attr("disabled")) && this.disable();
            this.value = this._value();
            this.options.highlight && (!this.isToggleSwitch && 0 === this.slider.find(".ui-slider-bg").length) && (this.valuebg = function () {
                var c = u.createElement("div");
                c.className = "ui-slider-bg " + a.mobile.activeBtnClass + " ui-btn-corner-all";
                return a(c).prependTo(f.slider)
            }());
            this.handle.buttonMarkup({corners: !0, theme: g, shadow: !0});
            var m, e = this.element, p = (g = !this.isToggleSwitch) ? [] : e.find("option"), r = g ? parseFloat(e.attr("min")) :
                0, n = g ? parseFloat(e.attr("max")) : p.length - 1, q = g && 0 < parseFloat(e.attr("step")) ? parseFloat(e.attr("step")) : 1;
            if ("object" === typeof b) {
                l = b;
                h = this.slider.offset().left;
                k = this.slider.width();
                m = k / ((n - r) / q);
                if (!this.dragging || l.pageX < h - 8 || l.pageX > h + k + 8)return;
                h = 1 < m ? 100 * ((l.pageX - h) / k) : Math.round(100 * ((l.pageX - h) / k))
            } else null == b && (b = g ? parseFloat(e.val() || 0) : e[0].selectedIndex), h = 100 * ((parseFloat(b) - r) / (n - r));
            if (!isNaN(h)) {
                l = h / 100 * (n - r) + r;
                var t = (l - r) % q;
                l -= t;
                2 * Math.abs(t) >= q && (l += 0 < t ? q : -q);
                t = 100 / ((n - r) / q);
                l =
                    parseFloat(l.toFixed(5));
                "undefined" === typeof m && (m = k / ((n - r) / q));
                1 < m && g && (h = (l - r) * t * (1 / q));
                0 > h && (h = 0);
                100 < h && (h = 100);
                l < r && (l = r);
                l > n && (l = n);
                this.handle.css("left", h + "%");
                this.handle[0].setAttribute("aria-valuenow", g ? l : p.eq(l).attr("value"));
                this.handle[0].setAttribute("aria-valuetext", g ? l : p.eq(l).getEncodedText());
                this.handle[0].setAttribute("title", g ? l : p.eq(l).getEncodedText());
                this.valuebg && this.valuebg.css("width", h + "%");
                if (this._labels) {
                    k = 100 * (this.handle.width() / this.slider.width());
                    var x = h &&
                        k + (100 - k) * h / 100, y = 100 === h ? 0 : Math.min(k + 100 - x, 100);
                    this._labels.each(function () {
                        var c = a(this).is(".ui-slider-label-a");
                        a(this).width((c ? x : y) + "%")
                    })
                }
                if (!c) {
                    c = !1;
                    g ? (c = e.val() !== l, e.val(l)) : (c = e[0].selectedIndex !== l, e[0].selectedIndex = l);
                    if (!1 === this._trigger("beforechange", b))return!1;
                    !d && c && e.trigger("change")
                }
            }
        }, enable: function () {
            this.element.attr("disabled", !1);
            this.slider.removeClass("ui-disabled").attr("aria-disabled", !1);
            return this._setOption("disabled", !1)
        }, disable: function () {
            this.element.attr("disabled",
                !0);
            this.slider.addClass("ui-disabled").attr("aria-disabled", !0);
            return this._setOption("disabled", !0)
        }}, a.mobile.behaviors.formReset));
        a.mobile.document.bind("pagecreate create", function (b) {
            a.mobile.slider.prototype.enhanceWithin(b.target, !0)
        })
    })(n);
    (function (a, m) {
        a.widget("mobile.rangeslider", a.mobile.widget, {options: {theme: null, trackTheme: null, disabled: !1, initSelector: ":jqmData(role='rangeslider')", mini: !1, highlight: !0}, _create: function () {
            var b = this.element, d = this.options.mini ? "ui-rangeslider ui-mini" :
                "ui-rangeslider", c = b.find("input").first(), f = b.find("input").last(), e = b.find("label").first(), g = a.data(c.get(0), "mobileSlider").slider, h = a.data(f.get(0), "mobileSlider").slider, k = a.data(c.get(0), "mobileSlider").handle, l = a('<div class="ui-rangeslider-sliders" />').appendTo(b);
            1 < b.find("label").length && b.find("label").last().hide();
            c.addClass("ui-rangeslider-first");
            f.addClass("ui-rangeslider-last");
            b.addClass(d);
            g.appendTo(l);
            h.appendTo(l);
            e.prependTo(b);
            k.prependTo(h);
            a.extend(this, {_inputFirst: c,
                _inputLast: f, _sliderFirst: g, _sliderLast: h, _targetVal: null, _sliderTarget: !1, _sliders: l, _proxy: !1});
            this.refresh();
            this._on(this.element.find("input.ui-slider-input"), {slidebeforestart: "_slidebeforestart", slidestop: "_slidestop", slidedrag: "_slidedrag", slidebeforechange: "_change", blur: "_change", keyup: "_change"});
            this._on({mousedown: "_change"});
            this._on(this.element.closest("form"), {reset: "_handleReset"});
            this._on(k, {vmousedown: "_dragFirstHandle"})
        }, _handleReset: function () {
            var a = this;
            setTimeout(function () {
                    a._updateHighlight()
                },
                0)
        }, _dragFirstHandle: function (b) {
            a.data(this._inputFirst.get(0), "mobileSlider").dragging = !0;
            a.data(this._inputFirst.get(0), "mobileSlider").refresh(b);
            return!1
        }, _slidedrag: function (b) {
            var d = a(b.target).is(this._inputFirst), c = d ? this._inputLast : this._inputFirst;
            this._sliderTarget = !1;
            if ("first" === this._proxy && d || "last" === this._proxy && !d)return a.data(c.get(0), "mobileSlider").dragging = !0, a.data(c.get(0), "mobileSlider").refresh(b), !1
        }, _slidestop: function (b) {
            b = a(b.target).is(this._inputFirst);
            this._proxy = !1;
            this.element.find("input").trigger("vmouseup");
            this._sliderFirst.css("z-index", b ? 1 : "")
        }, _slidebeforestart: function (b) {
            this._sliderTarget = !1;
            a(b.originalEvent.target).hasClass("ui-slider-track") && (this._sliderTarget = !0, this._targetVal = a(b.target).val())
        }, _setOption: function (a) {
            this._superApply(a);
            this.refresh()
        }, refresh: function () {
            var a = this.options;
            this.element.find("input").slider({theme: a.theme, trackTheme: a.trackTheme, disabled: a.disabled, mini: a.mini, highlight: a.highlight}).slider("refresh");
            this._updateHighlight()
        }, _change: function (b) {
            if ("keyup" === b.type)return this._updateHighlight(), !1;
            var d = this, c = parseFloat(this._inputFirst.val(), 10), f = parseFloat(this._inputLast.val(), 10), e = a(b.target).hasClass("ui-rangeslider-first"), g = e ? this._inputFirst : this._inputLast, h = e ? this._inputLast : this._inputFirst;
            if (this._inputFirst.val() > this._inputLast.val() && "mousedown" === b.type && !a(b.target).hasClass("ui-slider-handle"))g.blur(); else if ("mousedown" === b.type)return;
            c > f && !this._sliderTarget ? (g.val(e ?
                f : c).slider("refresh"), this._trigger("normalize")) : c > f && (g.val(this._targetVal).slider("refresh"), setTimeout(function () {
                h.val(e ? c : f).slider("refresh");
                a.data(h.get(0), "mobileSlider").handle.focus();
                d._sliderFirst.css("z-index", e ? "" : 1);
                d._trigger("normalize")
            }, 0), this._proxy = e ? "first" : "last");
            c === f ? (a.data(g.get(0), "mobileSlider").handle.css("z-index", 1), a.data(h.get(0), "mobileSlider").handle.css("z-index", 0)) : (a.data(h.get(0), "mobileSlider").handle.css("z-index", ""), a.data(g.get(0), "mobileSlider").handle.css("z-index",
                ""));
            this._updateHighlight();
            if (c >= f)return!1
        }, _updateHighlight: function () {
            var b = parseInt(a.data(this._inputFirst.get(0), "mobileSlider").handle.get(0).style.left, 10), d = parseInt(a.data(this._inputLast.get(0), "mobileSlider").handle.get(0).style.left, 10) - b;
            this.element.find(".ui-slider-bg").css({"margin-left": b + "%", width: d + "%"})
        }, _destroy: function () {
            this.element.removeClass("ui-rangeslider ui-mini").find("label").show();
            this._inputFirst.after(this._sliderFirst);
            this._inputLast.after(this._sliderLast);
            this._sliders.remove();
            this.element.find("input").removeClass("ui-rangeslider-first ui-rangeslider-last").slider("destroy")
        }});
        a.widget("mobile.rangeslider", a.mobile.rangeslider, a.mobile.behaviors.formReset);
        a(u).bind("pagecreate create", function (b) {
            a.mobile.rangeslider.prototype.enhanceWithin(b.target, !0)
        })
    })(n);
    (function (a, m) {
        a.widget("mobile.selectmenu", a.mobile.widget, a.extend({options: {theme: null, disabled: !1, icon: "arrow-d", iconpos: "right", inline: !1, corners: !0, shadow: !0, iconshadow: !0, overlayTheme: "a",
            dividerTheme: "b", hidePlaceholderMenuItems: !0, closeText: "Close", nativeMenu: !0, preventFocusZoom: /iPhone|iPad|iPod/.test(navigator.platform) && -1 < navigator.userAgent.indexOf("AppleWebKit"), initSelector: "select:not( :jqmData(role='slider') )", mini: !1}, _button: function () {
            return a("<div/>")
        }, _setDisabled: function (a) {
            this.element.attr("disabled", a);
            this.button.attr("aria-disabled", a);
            return this._setOption("disabled", a)
        }, _focusButton: function () {
            var a = this;
            setTimeout(function () {
                a.button.focus()
            }, 40)
        }, _selectOptions: function () {
            return this.select.find("option")
        },
            _preExtension: function () {
                var b = "";
                ~this.element[0].className.indexOf("ui-btn-left") && (b = " ui-btn-left");
                ~this.element[0].className.indexOf("ui-btn-right") && (b = " ui-btn-right");
                this.select = this.element.removeClass("ui-btn-left ui-btn-right").wrap("<div class='ui-select" + b + "'>");
                this.selectID = this.select.attr("id");
                this.label = a("label[for='" + this.selectID + "']").addClass("ui-select");
                this.isMultiple = this.select[0].multiple;
                this.options.theme || (this.options.theme = a.mobile.getInheritedTheme(this.select,
                    "c"))
            }, _destroy: function () {
                var a = this.element.parents(".ui-select");
                0 < a.length && (a.is(".ui-btn-left, .ui-btn-right") && this.element.addClass(a.is(".ui-btn-left") ? "ui-btn-left" : "ui-btn-right"), this.element.insertAfter(a), a.remove())
            }, _create: function () {
                this._preExtension();
                this._trigger("beforeCreate");
                this.button = this._button();
                var b = this, d = this.options, c = d.inline || this.select.jqmData("inline"), f = d.mini || this.select.jqmData("mini"), e = d.icon ? d.iconpos || this.select.jqmData("iconpos") : !1, c = this.button.insertBefore(this.select).buttonMarkup({theme: d.theme,
                    icon: d.icon, iconpos: e, inline: c, corners: d.corners, shadow: d.shadow, iconshadow: d.iconshadow, mini: f});
                this.setButtonText();
                d.nativeMenu && (q.opera && q.opera.version) && c.addClass("ui-select-nativeonly");
                this.isMultiple && (this.buttonCount = a("<span>").addClass("ui-li-count ui-btn-up-c ui-btn-corner-all").hide().appendTo(c.addClass("ui-li-has-count")));
                (d.disabled || this.element.attr("disabled")) && this.disable();
                this.select.change(function () {
                    b.refresh();
                    d.nativeMenu && this.blur()
                });
                this._handleFormReset();
                this.build()
            },
            build: function () {
                var b = this;
                this.select.appendTo(b.button).bind("vmousedown",function () {
                    b.button.addClass(a.mobile.activeBtnClass)
                }).bind("focus",function () {
                    b.button.addClass(a.mobile.focusClass)
                }).bind("blur",function () {
                    b.button.removeClass(a.mobile.focusClass)
                }).bind("focus vmouseover",function () {
                    b.button.trigger("vmouseover")
                }).bind("vmousemove",function () {
                    b.button.removeClass(a.mobile.activeBtnClass)
                }).bind("change blur vmouseout",function () {
                    b.button.trigger("vmouseout").removeClass(a.mobile.activeBtnClass)
                }).bind("change blur",
                    function () {
                        b.button.removeClass("ui-btn-down-" + b.options.theme)
                    });
                b.button.bind("vmousedown", function () {
                    b.options.preventFocusZoom && a.mobile.zoom.disable(!0)
                });
                b.label.bind("click focus", function () {
                    b.options.preventFocusZoom && a.mobile.zoom.disable(!0)
                });
                b.select.bind("focus", function () {
                    b.options.preventFocusZoom && a.mobile.zoom.disable(!0)
                });
                b.button.bind("mouseup", function () {
                    b.options.preventFocusZoom && setTimeout(function () {
                        a.mobile.zoom.enable(!0)
                    }, 0)
                });
                b.select.bind("blur", function () {
                    b.options.preventFocusZoom &&
                    a.mobile.zoom.enable(!0)
                })
            }, selected: function () {
                return this._selectOptions().filter(":selected")
            }, selectedIndices: function () {
                var a = this;
                return this.selected().map(function () {
                    return a._selectOptions().index(this)
                }).get()
            }, setButtonText: function () {
                var b = this, d = this.selected(), c = this.placeholder, f = a(u.createElement("span"));
                this.button.find(".ui-btn-text").html(function () {
                    c = d.length ? d.map(function () {
                        return a(this).text()
                    }).get().join(", ") : b.placeholder;
                    return f.text(c).addClass(b.select.attr("class")).addClass(d.attr("class"))
                })
            },
            setButtonCount: function () {
                var a = this.selected();
                this.isMultiple && this.buttonCount[1 < a.length ? "show" : "hide"]().text(a.length)
            }, _reset: function () {
                this.refresh()
            }, refresh: function () {
                this.setButtonText();
                this.setButtonCount()
            }, open: a.noop, close: a.noop, disable: function () {
                this._setDisabled(!0);
                this.button.addClass("ui-disabled")
            }, enable: function () {
                this._setDisabled(!1);
                this.button.removeClass("ui-disabled")
            }}, a.mobile.behaviors.formReset));
        a.mobile.document.bind("pagecreate create", function (b) {
            a.mobile.selectmenu.prototype.enhanceWithin(b.target,
                !0)
        })
    })(n);
    (function (a, m) {
        function b(a, b, d, g) {
            var h = g;
            return h = a < b ? d + (a - b) / 2 : Math.min(Math.max(d, g - b / 2), d + a - b)
        }

        function d() {
            var c = a.mobile.window;
            return{x: c.scrollLeft(), y: c.scrollTop(), cx: q.innerWidth || c.width(), cy: q.innerHeight || c.height()}
        }

        a.widget("mobile.popup", a.mobile.widget, {options: {theme: null, overlayTheme: null, shadow: !0, corners: !0, transition: "none", positionTo: "origin", tolerance: null, initSelector: ":jqmData(role='popup')", closeLinkSelector: "a:jqmData(rel='back')", closeLinkEvents: "click.popup",
            navigateEvents: "navigate.popup", closeEvents: "navigate.popup pagebeforechange.popup", dismissible: !0, history: !a.mobile.browser.oldIE}, _eatEventAndClose: function (a) {
            a.preventDefault();
            a.stopImmediatePropagation();
            this.options.dismissible && this.close();
            return!1
        }, _resizeScreen: function () {
            var a = this._ui.container.outerHeight(!0);
            this._ui.screen.removeAttr("style");
            a > this._ui.screen.height() && this._ui.screen.height(a)
        }, _handleWindowKeyUp: function (c) {
            if (this._isOpen && c.keyCode === a.mobile.keyCode.ESCAPE)return this._eatEventAndClose(c)
        },
            _expectResizeEvent: function () {
                var c = d();
                if (this._resizeData) {
                    if (c.x === this._resizeData.winCoords.x && c.y === this._resizeData.winCoords.y && c.cx === this._resizeData.winCoords.cx && c.cy === this._resizeData.winCoords.cy)return!1;
                    clearTimeout(this._resizeData.timeoutId)
                }
                this._resizeData = {timeoutId: setTimeout(a.proxy(this, "_resizeTimeout"), 200), winCoords: c};
                return!0
            }, _resizeTimeout: function () {
                this._isOpen ? this._expectResizeEvent() || (this._ui.container.hasClass("ui-popup-hidden") && (this._ui.container.removeClass("ui-popup-hidden"),
                    this.reposition({positionTo: "window"}), this._ignoreResizeEvents()), this._resizeScreen(), this._resizeData = null, this._orientationchangeInProgress = !1) : (this._resizeData = null, this._orientationchangeInProgress = !1)
            }, _ignoreResizeEvents: function () {
                var a = this;
                this._ignoreResizeTo && clearTimeout(this._ignoreResizeTo);
                this._ignoreResizeTo = setTimeout(function () {
                    a._ignoreResizeTo = 0
                }, 1E3)
            }, _handleWindowResize: function (a) {
                this._isOpen && 0 === this._ignoreResizeTo && (!this._expectResizeEvent() && !this._orientationchangeInProgress ||
                    this._ui.container.hasClass("ui-popup-hidden") || this._ui.container.addClass("ui-popup-hidden").removeAttr("style"))
            }, _handleWindowOrientationchange: function (a) {
                !this._orientationchangeInProgress && (this._isOpen && 0 === this._ignoreResizeTo) && (this._expectResizeEvent(), this._orientationchangeInProgress = !0)
            }, _handleDocumentFocusIn: function (c) {
                var b = c.target, d, g = this._ui;
                if (this._isOpen) {
                    if (b !== g.container[0]) {
                        d = a(c.target);
                        if (0 === d.parents().filter(g.container[0]).length)return a(u.activeElement).one("focus",
                            function (a) {
                                d.blur()
                            }), g.focusElement.focus(), c.preventDefault(), c.stopImmediatePropagation(), !1;
                        g.focusElement[0] === g.container[0] && (g.focusElement = d)
                    }
                    this._ignoreResizeEvents()
                }
            }, _create: function () {
                var c = {screen: a("<div class='ui-screen-hidden ui-popup-screen'></div>"), placeholder: a("<div style='display: none;'>\x3c!-- placeholder --\x3e</div>"), container: a("<div class='ui-popup-container ui-popup-hidden'></div>")}, b = this.element.closest(".ui-page"), d = this.element.attr("id"), g = this.options;
                g.history =
                    g.history && a.mobile.ajaxEnabled && a.mobile.hashListeningEnabled;
                0 === b.length && (b = a("body"));
                g.container = g.container || a.mobile.pageContainer || b;
                b.append(c.screen);
                c.container.insertAfter(c.screen);
                c.placeholder.insertAfter(this.element);
                d && (c.screen.attr("id", d + "-screen"), c.container.attr("id", d + "-popup"), c.placeholder.html("\x3c!-- placeholder for " + d + " --\x3e"));
                c.container.append(this.element);
                c.focusElement = c.container;
                this.element.addClass("ui-popup");
                a.extend(this, {_scrollTop: 0, _page: b, _ui: c,
                    _fallbackTransition: "", _currentTransition: !1, _prereqs: null, _isOpen: !1, _tolerance: null, _resizeData: null, _ignoreResizeTo: 0, _orientationchangeInProgress: !1});
                this._applyTheme(this.element, g.theme, "body");
                this._applyTheme(this._ui.screen, g.overlayTheme, "overlay");
                this._applyTransition(g.transition);
                this.element.toggleClass("ui-overlay-shadow", g.shadow).toggleClass("ui-corner-all", g.corners);
                this._setTolerance(g.tolerance);
                c.screen.bind("vclick", a.proxy(this, "_eatEventAndClose"));
                this._on(a.mobile.window,
                    {orientationchange: a.proxy(this, "_handleWindowOrientationchange"), resize: a.proxy(this, "_handleWindowResize"), keyup: a.proxy(this, "_handleWindowKeyUp")});
                this._on(a.mobile.document, {focusin: a.proxy(this, "_handleDocumentFocusIn")})
            }, _applyTheme: function (a, b, d) {
                for (var g = (a.attr("class") || "").split(" "), h = null, k = String(b); 0 < g.length;)if (h = g.pop(), (h = RegExp("^ui-" + d + "-([a-z])$").exec(h)) && 1 < h.length) {
                    h = h[1];
                    break
                } else h = null;
                b !== h && (a.removeClass("ui-" + d + "-" + h), null !== b && "none" !== b && a.addClass("ui-" + d +
                    "-" + k))
            }, _setTheme: function (a) {
                this._applyTheme(this.element, a, "body")
            }, _setOverlayTheme: function (a) {
                this._applyTheme(this._ui.screen, a, "overlay");
                this._isOpen && this._ui.screen.addClass("in")
            }, _setShadow: function (a) {
                this.element.toggleClass("ui-overlay-shadow", a)
            }, _setCorners: function (a) {
                this.element.toggleClass("ui-corner-all", a)
            }, _applyTransition: function (b) {
                this._ui.container.removeClass(this._fallbackTransition);
                b && "none" !== b && (this._fallbackTransition = a.mobile._maybeDegradeTransition(b), "none" ===
                    this._fallbackTransition && (this._fallbackTransition = ""), this._ui.container.addClass(this._fallbackTransition))
            }, _setTransition: function (a) {
                this._currentTransition || this._applyTransition(a)
            }, _setTolerance: function (b) {
                var d = {t: 30, r: 15, b: 30, l: 15};
                if (b !== m) {
                    var e = String(b).split(",");
                    a.each(e, function (a, b) {
                        e[a] = parseInt(b, 10)
                    });
                    switch (e.length) {
                        case 1:
                            isNaN(e[0]) || (d.t = d.r = d.b = d.l = e[0]);
                            break;
                        case 2:
                            isNaN(e[0]) || (d.t = d.b = e[0]);
                            isNaN(e[1]) || (d.l = d.r = e[1]);
                            break;
                        case 4:
                            isNaN(e[0]) || (d.t = e[0]), isNaN(e[1]) ||
                                (d.r = e[1]), isNaN(e[2]) || (d.b = e[2]), isNaN(e[3]) || (d.l = e[3])
                    }
                }
                this._tolerance = d
            }, _setOption: function (a, b) {
                var d = "_set" + a.charAt(0).toUpperCase() + a.slice(1);
                if (this[d] !== m)this[d](b);
                this._super(a, b)
            }, _placementCoords: function (a) {
                var f, e, g;
                g = d();
                f = this._tolerance.l;
                var h = g.y + this._tolerance.t, k = g.cx - this._tolerance.l - this._tolerance.r, l = g.cy - this._tolerance.t - this._tolerance.b;
                this._ui.container.css("max-width", k);
                e = this._ui.container.outerWidth(!0);
                g = this._ui.container.outerHeight(!0);
                f = b(k, e, f, a.x);
                a = b(l, g, h, a.y);
                a = Math.max(0, a);
                h = u.documentElement;
                k = u.body;
                h = Math.max(h.clientHeight, k.scrollHeight, k.offsetHeight, h.scrollHeight, h.offsetHeight);
                a -= Math.min(a, Math.max(0, a + g - h));
                return{left: f, top: a}
            }, _createPrereqs: function (b, d, e) {
                var g = this, h;
                h = {screen: a.Deferred(), container: a.Deferred()};
                h.screen.then(function () {
                    h === g._prereqs && b()
                });
                h.container.then(function () {
                    h === g._prereqs && d()
                });
                a.when(h.screen, h.container).done(function () {
                    h === g._prereqs && (g._prereqs = null, e())
                });
                g._prereqs = h
            }, _animate: function (b) {
                this._ui.screen.removeClass(b.classToRemove).addClass(b.screenClassToAdd);
                b.prereqs.screen.resolve();
                if (b.transition && "none" !== b.transition && (b.applyTransition && this._applyTransition(b.transition), this._fallbackTransition)) {
                    this._ui.container.animationComplete(a.proxy(b.prereqs.container, "resolve")).addClass(b.containerClassToAdd).removeClass(b.classToRemove);
                    return
                }
                this._ui.container.removeClass(b.classToRemove);
                b.prereqs.container.resolve()
            }, _desiredCoords: function (b) {
                var f = null, e, g = d(), h = b.x;
                e = b.y;
                if ((b = b.positionTo) && "origin" !== b)if ("window" === b)h = g.cx / 2 + g.x, e = g.cy /
                    2 + g.y; else {
                    try {
                        f = a(b)
                    } catch (k) {
                        f = null
                    }
                    f && (f.filter(":visible"), 0 === f.length && (f = null))
                }
                f && (e = f.offset(), h = e.left + f.outerWidth() / 2, e = e.top + f.outerHeight() / 2);
                if ("number" !== a.type(h) || isNaN(h))h = g.cx / 2 + g.x;
                if ("number" !== a.type(e) || isNaN(e))e = g.cy / 2 + g.y;
                return{x: h, y: e}
            }, _reposition: function (a) {
                a = {x: a.x, y: a.y, positionTo: a.positionTo};
                this._trigger("beforeposition", m, a);
                this._ui.container.offset(this._placementCoords(this._desiredCoords(a)))
            }, reposition: function (a) {
                this._isOpen && this._reposition(a)
            }, _openPrereqsComplete: function () {
                this._ui.container.addClass("ui-popup-active");
                this._isOpen = !0;
                this._resizeScreen();
                this._ui.container.attr("tabindex", "0").focus();
                this._ignoreResizeEvents();
                this._trigger("afteropen")
            }, _open: function (b) {
                b = a.extend({}, this.options, b);
                var d;
                d = navigator.userAgent;
                var e = d.match(/AppleWebKit\/([0-9\.]+)/), e = !!e && e[1], g = d.match(/Android (\d+(?:\.\d+))/), h = !!g && g[1];
                d = -1 < d.indexOf("Chrome");
                d = null !== g && "4.0" === h && e && 534.13 < e && !d ? !0 : !1;
                this._createPrereqs(a.noop, a.noop, a.proxy(this, "_openPrereqsComplete"));
                this._currentTransition = b.transition;
                this._applyTransition(b.transition);
                this.options.theme || this._setTheme(this._page.jqmData("theme") || a.mobile.getInheritedTheme(this._page, "c"));
                this._ui.screen.removeClass("ui-screen-hidden");
                this._ui.container.removeClass("ui-popup-hidden");
                this._reposition(b);
                this.options.overlayTheme && d && this.element.closest(".ui-page").addClass("ui-popup-open");
                this._animate({additionalCondition: !0, transition: b.transition, classToRemove: "", screenClassToAdd: "in", containerClassToAdd: "in", applyTransition: !1, prereqs: this._prereqs})
            }, _closePrereqScreen: function () {
                this._ui.screen.removeClass("out").addClass("ui-screen-hidden")
            },
            _closePrereqContainer: function () {
                this._ui.container.removeClass("reverse out").addClass("ui-popup-hidden").removeAttr("style")
            }, _closePrereqsDone: function () {
                var b = this._ui.container;
                b.removeAttr("tabindex");
                a.mobile.popup.active = m;
                a(":focus", b[0]).add(b[0]).blur();
                this._trigger("afterclose")
            }, _close: function (b) {
                this._ui.container.removeClass("ui-popup-active");
                this._page.removeClass("ui-popup-open");
                this._isOpen = !1;
                this._createPrereqs(a.proxy(this, "_closePrereqScreen"), a.proxy(this, "_closePrereqContainer"),
                    a.proxy(this, "_closePrereqsDone"));
                this._animate({additionalCondition: this._ui.screen.hasClass("in"), transition: b ? "none" : this._currentTransition, classToRemove: "in", screenClassToAdd: "out", containerClassToAdd: "reverse out", applyTransition: !0, prereqs: this._prereqs})
            }, _unenhance: function () {
                this._setTheme("none");
                this.element.detach().insertAfter(this._ui.placeholder).removeClass("ui-popup ui-overlay-shadow ui-corner-all");
                this._ui.screen.remove();
                this._ui.container.remove();
                this._ui.placeholder.remove()
            },
            _destroy: function () {
                a.mobile.popup.active === this ? (this.element.one("popupafterclose", a.proxy(this, "_unenhance")), this.close()) : this._unenhance()
            }, _closePopup: function (b, d) {
                var e, g = this.options, h = !1;
                q.scrollTo(0, this._scrollTop);
                b && ("pagebeforechange" === b.type && d) && (e = "string" === typeof d.toPage ? d.toPage : d.toPage.jqmData("url"), e = a.mobile.path.parseUrl(e), e = e.pathname + e.search + e.hash, this._myUrl !== a.mobile.path.makeUrlAbsolute(e) ? h = !0 : b.preventDefault());
                g.container.unbind(g.closeEvents);
                this.element.undelegate(g.closeLinkSelector,
                    g.closeLinkEvents);
                this._close(h)
            }, _bindContainerClose: function () {
                this.options.container.one(this.options.closeEvents, a.proxy(this, "_closePopup"))
            }, open: function (b) {
                var d = this, e = this.options, g, h, k, l;
                a.mobile.popup.active || (a.mobile.popup.active = this, this._scrollTop = a.mobile.window.scrollTop(), e.history ? (l = a.mobile.urlHistory, e = a.mobile.dialogHashKey, g = a.mobile.activePage, h = g.is(".ui-dialog"), this._myUrl = g = l.getActive().url, (k = -1 < g.indexOf(e) && !h && 0 < l.activeIndex) ? (d._open(b), d._bindContainerClose()) :
                    (g = -1 !== g.indexOf(e) || h ? a.mobile.path.parseLocation().hash + e : g + (-1 < g.indexOf("#") ? e : "#" + e), 0 === l.activeIndex && g === l.initialDst && (g += e), a(q).one("beforenavigate", function (a) {
                        a.preventDefault();
                        d._open(b);
                        d._bindContainerClose()
                    }), this.urlAltered = !0, a.mobile.navigate(g, {role: "dialog"}))) : (d._open(b), d._bindContainerClose(), d.element.delegate(e.closeLinkSelector, e.closeLinkEvents, function (a) {
                    d.close();
                    a.preventDefault()
                })))
            }, close: function () {
                a.mobile.popup.active === this && (this._scrollTop = a.mobile.window.scrollTop(),
                    this.options.history && this.urlAltered ? (a.mobile.back(), this.urlAltered = !1) : this._closePopup())
            }});
        a.mobile.popup.handleLink = function (b) {
            var d = b.closest(":jqmData(role='page')"), d = 0 === d.length ? a("body") : d, d = a(a.mobile.path.parseUrl(b.attr("href")).hash, d[0]), e;
            d.data("mobile-popup") && (e = b.offset(), d.popup("open", {x: e.left + b.outerWidth() / 2, y: e.top + b.outerHeight() / 2, transition: b.jqmData("transition"), positionTo: b.jqmData("position-to")}));
            setTimeout(function () {
                var d = b.parent().parent();
                d.hasClass("ui-li") &&
                (b = d.parent());
                b.removeClass(a.mobile.activeBtnClass)
            }, 300)
        };
        a.mobile.document.bind("pagebeforechange", function (b, d) {
            "popup" === d.options.role && (a.mobile.popup.handleLink(d.options.link), b.preventDefault())
        });
        a.mobile.document.bind("pagecreate create", function (b) {
            a.mobile.popup.prototype.enhanceWithin(b.target, !0)
        })
    })(n);
    (function (a, m) {
        var b = function (b) {
            var c = b._destroy, f = b.selectID, e = f ? f : (a.mobile.ns || "") + "uuid-" + b.uuid, g = e + "-listbox", e = e + "-dialog", h = b.label, k = b.select.closest(".ui-page"), l = b._selectOptions(),
                n = b.isMultiple = b.select[0].multiple, p = f + "-button", r = f + "-menu", q = a("<div data-" + a.mobile.ns + "role='dialog' id='" + e + "' data-" + a.mobile.ns + "theme='" + b.options.theme + "' data-" + a.mobile.ns + "overlay-theme='" + b.options.overlayTheme + "'><div data-" + a.mobile.ns + "role='header'><div class='ui-title'>" + h.getEncodedText() + "</div></div><div data-" + a.mobile.ns + "role='content'></div></div>"), C = a("<div id='" + g + "' class='ui-selectmenu'>").insertAfter(b.select).popup({theme: b.options.overlayTheme}), t = a("<ul>", {"class": "ui-selectmenu-list",
                    id: r, role: "listbox", "aria-labelledby": p}).attr("data-" + a.mobile.ns + "theme", b.options.theme).attr("data-" + a.mobile.ns + "divider-theme", b.options.dividerTheme).appendTo(C), x = a("<div>", {"class": "ui-header ui-bar-" + b.options.theme}).prependTo(C), y = a("<h1>", {"class": "ui-title"}).appendTo(x), z;
            b.isMultiple && (z = a("<a>", {text: b.options.closeText, href: "#", "class": "ui-btn-left"}).attr("data-" + a.mobile.ns + "iconpos", "notext").attr("data-" + a.mobile.ns + "icon", "delete").appendTo(x).buttonMarkup());
            a.extend(b, {select: b.select,
                selectID: f, buttonId: p, menuId: r, popupID: g, dialogID: e, thisPage: k, menuPage: q, label: h, selectOptions: l, isMultiple: n, theme: b.options.theme, listbox: C, list: t, header: x, headerTitle: y, headerClose: z, menuPageContent: void 0, menuPageClose: void 0, placeholder: "", build: function () {
                    var c = this, e = function (a) {
                        return a.replace(/([!"#$%&'()*+,./:;<=>?@[\]^`{|}~])/g, "\\$1")
                    };
                    c.refresh();
                    c._origTabIndex === m && (c._origTabIndex = null === c.select[0].getAttribute("tabindex") ? !1 : c.select.attr("tabindex"));
                    c.select.attr("tabindex",
                        "-1").focus(function () {
                            a(this).blur();
                            c.button.focus()
                        });
                    c.button.bind("vclick keydown", function (b) {
                        c.options.disabled || c.isOpen || "vclick" !== b.type && (!b.keyCode || b.keyCode !== a.mobile.keyCode.ENTER && b.keyCode !== a.mobile.keyCode.SPACE) || (c._decideFormat(), "overlay" === c.menuType ? c.button.attr("href", "#" + e(c.popupID)).attr("data-" + (a.mobile.ns || "") + "rel", "popup") : c.button.attr("href", "#" + e(c.dialogID)).attr("data-" + (a.mobile.ns || "") + "rel", "dialog"), c.isOpen = !0)
                    });
                    c.list.attr("role", "listbox").bind("focusin",
                        function (b) {
                            a(b.target).attr("tabindex", "0").trigger("vmouseover")
                        }).bind("focusout",function (b) {
                            a(b.target).attr("tabindex", "-1").trigger("vmouseout")
                        }).delegate("li:not(.ui-disabled, .ui-li-divider)", "click",function (e) {
                            var f = c.select[0].selectedIndex, g = c.list.find("li:not(.ui-li-divider)").index(this), h = c._selectOptions().eq(g)[0];
                            h.selected = c.isMultiple ? !h.selected : !0;
                            c.isMultiple && a(this).find(".ui-icon").toggleClass("ui-icon-checkbox-on", h.selected).toggleClass("ui-icon-checkbox-off", !h.selected);
                            (c.isMultiple || f !== g) && c.select.trigger("change");
                            c.isMultiple ? c.list.find("li:not(.ui-li-divider)").eq(g).addClass("ui-btn-down-" + b.options.theme).find("a").first().focus() : c.close();
                            e.preventDefault()
                        }).keydown(function (c) {
                            var e = a(c.target), f = e.closest("li");
                            switch (c.keyCode) {
                                case 38:
                                    return c = f.prev().not(".ui-selectmenu-placeholder"), c.is(".ui-li-divider") && (c = c.prev()), c.length && (e.blur().attr("tabindex", "-1"), c.addClass("ui-btn-down-" + b.options.theme).find("a").first().focus()), !1;
                                case 40:
                                    return c =
                                        f.next(), c.is(".ui-li-divider") && (c = c.next()), c.length && (e.blur().attr("tabindex", "-1"), c.addClass("ui-btn-down-" + b.options.theme).find("a").first().focus()), !1;
                                case 13:
                                case 32:
                                    return e.trigger("click"), !1
                            }
                        });
                    c.menuPage.bind("pagehide", function () {
                        a.mobile._bindPageRemove.call(c.thisPage)
                    });
                    c.listbox.bind("popupafterclose", function (a) {
                        c.close()
                    });
                    c.isMultiple && c.headerClose.click(function () {
                        if ("overlay" === c.menuType)return c.close(), !1
                    });
                    c.thisPage.addDependents(this.menuPage)
                }, _isRebuildRequired: function () {
                    var a =
                        this.list.find("li");
                    return this._selectOptions().text() !== a.text()
                }, selected: function () {
                    return this._selectOptions().filter(":selected:not( :jqmData(placeholder='true') )")
                }, refresh: function (b, c) {
                    var d = this, e;
                    (b || this._isRebuildRequired()) && d._buildList();
                    e = this.selectedIndices();
                    d.setButtonText();
                    d.setButtonCount();
                    d.list.find("li:not(.ui-li-divider)").removeClass(a.mobile.activeBtnClass).attr("aria-selected", !1).each(function (b) {
                        -1 < a.inArray(b, e) && (b = a(this), b.attr("aria-selected", !0), d.isMultiple ?
                            b.find(".ui-icon").removeClass("ui-icon-checkbox-off").addClass("ui-icon-checkbox-on") : b.is(".ui-selectmenu-placeholder") ? b.next().addClass(a.mobile.activeBtnClass) : b.addClass(a.mobile.activeBtnClass))
                    })
                }, close: function () {
                    !this.options.disabled && this.isOpen && ("page" === this.menuType ? (this.menuPage.dialog("close"), this.list.appendTo(this.listbox)) : this.listbox.popup("close"), this._focusButton(), this.isOpen = !1)
                }, open: function () {
                    this.button.click()
                }, _decideFormat: function () {
                    function c() {
                        var f = e.list.find("." +
                            a.mobile.activeBtnClass + " a");
                        0 === f.length && (f = e.list.find("li.ui-btn:not( :jqmData(placeholder='true') ) a"));
                        f.first().focus().closest("li").addClass("ui-btn-down-" + b.options.theme)
                    }

                    var e = this, f = a.mobile.window, g = e.list.parent(), h = g.outerHeight();
                    g.outerWidth();
                    a("." + a.mobile.activePageClass);
                    var g = f.scrollTop(), k = e.button.offset().top, l = f.height();
                    f.width();
                    if (h > l - 80 || !a.support.scrollTop) {
                        e.menuPage.appendTo(a.mobile.pageContainer).page();
                        e.menuPageContent = q.find(".ui-content");
                        e.menuPageClose =
                            q.find(".ui-header a");
                        e.thisPage.unbind("pagehide.remove");
                        if (0 === g && k > l)e.thisPage.one("pagehide", function () {
                            a(this).jqmData("lastScroll", k)
                        });
                        e.menuPage.one("pageshow",function () {
                            c()
                        }).one("pagehide", function () {
                            e.close()
                        });
                        e.menuType = "page";
                        e.menuPageContent.append(e.list);
                        e.menuPage.find("div .ui-title").text(e.label.text())
                    } else e.menuType = "overlay", e.listbox.one("popupafteropen", c)
                }, _buildList: function () {
                    var b = this.options, c = this.placeholder, d = !0, e = this.isMultiple ? "checkbox-off" : "false";
                    this.list.empty().filter(".ui-listview").listview("destroy");
                    for (var f = this.select.find("option"), g = f.length, h = this.select[0], k = "data-" + a.mobile.ns, l = k + "option-index", m = k + "icon", n = k + "role", k = k + "placeholder", p = u.createDocumentFragment(), r = !1, q, s = 0; s < g; s++, r = !1) {
                        var t = f[s], v = a(t), x = t.parentNode, y = v.text(), z = u.createElement("a"), C = [];
                        z.setAttribute("href", "#");
                        z.appendChild(u.createTextNode(y));
                        x !== h && "optgroup" === x.nodeName.toLowerCase() && (x = x.getAttribute("label"), x !== q && (q = u.createElement("li"), q.setAttribute(n, "list-divider"), q.setAttribute("role", "option"),
                            q.setAttribute("tabindex", "-1"), q.appendChild(u.createTextNode(x)), p.appendChild(q), q = x));
                        !d || t.getAttribute("value") && 0 !== y.length && !v.jqmData("placeholder") || (d = !1, r = !0, null === t.getAttribute(k) && (this._removePlaceholderAttr = !0), t.setAttribute(k, !0), b.hidePlaceholderMenuItems && C.push("ui-selectmenu-placeholder"), c !== y && (c = this.placeholder = y));
                        v = u.createElement("li");
                        t.disabled && (C.push("ui-disabled"), v.setAttribute("aria-disabled", !0));
                        v.setAttribute(l, s);
                        v.setAttribute(m, e);
                        r && v.setAttribute(k,
                            !0);
                        v.className = C.join(" ");
                        v.setAttribute("role", "option");
                        z.setAttribute("tabindex", "-1");
                        v.appendChild(z);
                        p.appendChild(v)
                    }
                    this.list[0].appendChild(p);
                    this.isMultiple || c.length ? this.headerTitle.text(this.placeholder) : this.header.hide();
                    this.list.listview()
                }, _button: function () {
                    return a("<a>", {href: "#", role: "button", id: this.buttonId, "aria-haspopup": "true", "aria-owns": this.menuId})
                }, _destroy: function () {
                    this.close();
                    this._origTabIndex !== m && (!1 !== this._origTabIndex ? this.select.attr("tabindex", this._origTabIndex) :
                        this.select.removeAttr("tabindex"));
                    this._removePlaceholderAttr && this._selectOptions().removeAttr("data-" + a.mobile.ns + "placeholder");
                    this.listbox.remove();
                    this.menuPage.remove();
                    c.apply(this, arguments)
                }})
        };
        a.mobile.document.bind("selectmenubeforecreate", function (d) {
            d = a(d.target).data("mobile-selectmenu");
            d.options.nativeMenu || 0 !== d.element.parents(":jqmData(role='popup')").length || b(d)
        })
    })(n);
    (function (a, m) {
        a.widget("mobile.controlgroup", a.mobile.widget, a.extend({options: {shadow: !1, corners: !0, excludeInvisible: !0,
            type: "vertical", mini: !1, initSelector: ":jqmData(role='controlgroup')"}, _create: function () {
            var b = this.element, d = a("<div class='ui-controlgroup-controls'></div>"), c = a("<div role='heading' class='ui-controlgroup-label'></div>"), f = b.children("legend"), e = this;
            b.wrapInner(d);
            f.length && c.append(f).insertBefore(b.children(0));
            b.addClass("ui-corner-all ui-controlgroup");
            a.extend(this, {_initialRefresh: !0});
            a.each(this.options, function (a, b) {
                e.options[a] = m;
                e._setOption(a, b, !0)
            })
        }, _init: function () {
            this.refresh()
        },
            _setOption: function (b, d) {
                var c = "_set" + b.charAt(0).toUpperCase() + b.slice(1);
                if (this[c] !== m)this[c](d);
                this._super(b, d);
                this.element.attr("data-" + (a.mobile.ns || "") + b.replace(/([A-Z])/, "-$1").toLowerCase(), d)
            }, _setType: function (a) {
                this.element.removeClass("ui-controlgroup-horizontal ui-controlgroup-vertical").addClass("ui-controlgroup-" + a);
                this.refresh()
            }, _setCorners: function (a) {
                this.element.toggleClass("ui-corner-all", a)
            }, _setShadow: function (a) {
                this.element.toggleClass("ui-shadow", a)
            }, _setMini: function (a) {
                this.element.toggleClass("ui-mini",
                    a)
            }, container: function () {
                return this.element.children(".ui-controlgroup-controls")
            }, refresh: function () {
                var b = this.element.find(".ui-btn").not(".ui-slider-handle"), d = this._initialRefresh;
                a.mobile.checkboxradio && this.element.find(":mobile-checkboxradio").checkboxradio("refresh");
                this._addFirstLastClasses(b, this.options.excludeInvisible ? this._getVisibles(b, d) : b, d);
                this._initialRefresh = !1
            }}, a.mobile.behaviors.addFirstLastClasses));
        a(function () {
            a.mobile.document.bind("pagecreate create", function (b) {
                a.mobile.controlgroup.prototype.enhanceWithin(b.target,
                    !0)
            })
        })
    })(n);
    (function (a, m) {
        a(u).bind("pagecreate create", function (b) {
            a(b.target).find("a").jqmEnhanceable().filter(":jqmData(rel='popup')[href][href!='']").each(function () {
                var b = this, c = a(this).attr("href"), f = c.substring(1);
                b.setAttribute("aria-haspopup", !0);
                b.setAttribute("aria-owns", f);
                b.setAttribute("aria-expanded", !1);
                a(u).on("popupafteropen", c,function () {
                    b.setAttribute("aria-expanded", !0)
                }).on("popupafterclose", c, function () {
                    b.setAttribute("aria-expanded", !1)
                })
            }).end().not(".ui-btn, .ui-link-inherit, :jqmData(role='none'), :jqmData(role='nojs')").addClass("ui-link")
        })
    })(n);
    (function (a, m) {
        a.widget("mobile.fixedtoolbar", a.mobile.widget, {options: {visibleOnPageShow: !0, disablePageZoom: !0, transition: "slide", fullscreen: !1, tapToggle: !0, tapToggleBlacklist: "a, button, input, select, textarea, .ui-header-fixed, .ui-footer-fixed, .ui-popup, .ui-panel, .ui-panel-dismiss-open", hideDuringFocus: "input, textarea, select", updatePagePadding: !0, trackPersistentToolbars: !0, supportBlacklist: function () {
            return!a.support.fixedPosition
        }, initSelector: ":jqmData(position='fixed')"}, _create: function () {
            var b =
                this.options, d = this.element, c = d.is(":jqmData(role='header')") ? "header" : "footer", f = d.closest(".ui-page");
            b.supportBlacklist() ? this.destroy() : (d.addClass("ui-" + c + "-fixed"), b.fullscreen ? (d.addClass("ui-" + c + "-fullscreen"), f.addClass("ui-page-" + c + "-fullscreen")) : f.addClass("ui-page-" + c + "-fixed"), a.extend(this, {_thisPage: null}), this._addTransitionClass(), this._bindPageEvents(), this._bindToggleHandlers())
        }, _addTransitionClass: function () {
            var a = this.options.transition;
            a && "none" !== a && ("slide" === a && (a = this.element.is(".ui-header") ?
                "slidedown" : "slideup"), this.element.addClass(a))
        }, _bindPageEvents: function () {
            this._thisPage = this.element.closest(".ui-page");
            this._on(this._thisPage, {pagebeforeshow: "_handlePageBeforeShow", webkitAnimationStart: "_handleAnimationStart", animationstart: "_handleAnimationStart", updatelayout: "_handleAnimationStart", pageshow: "_handlePageShow", pagebeforehide: "_handlePageBeforeHide"})
        }, _handlePageBeforeShow: function () {
            var b = this.options;
            b.disablePageZoom && a.mobile.zoom.disable(!0);
            b.visibleOnPageShow || this.hide(!0)
        },
            _handleAnimationStart: function () {
                this.options.updatePagePadding && this.updatePagePadding(this._thisPage)
            }, _handlePageShow: function () {
                this.updatePagePadding(this._thisPage);
                this.options.updatePagePadding && this._on(a.mobile.window, {throttledresize: "updatePagePadding"})
            }, _handlePageBeforeHide: function (b, d) {
                var c = this.options;
                c.disablePageZoom && a.mobile.zoom.enable(!0);
                c.updatePagePadding && this._off(a.mobile.window, "throttledresize");
                if (c.trackPersistentToolbars) {
                    var c = a(".ui-footer-fixed:jqmData(id)",
                        this._thisPage), f = a(".ui-header-fixed:jqmData(id)", this._thisPage), e = c.length && d.nextPage && a(".ui-footer-fixed:jqmData(id='" + c.jqmData("id") + "')", d.nextPage) || a(), g = f.length && d.nextPage && a(".ui-header-fixed:jqmData(id='" + f.jqmData("id") + "')", d.nextPage) || a();
                    if (e.length || g.length)e.add(g).appendTo(a.mobile.pageContainer), d.nextPage.one("pageshow", function () {
                        g.prependTo(this);
                        e.appendTo(this)
                    })
                }
            }, _visible: !0, updatePagePadding: function (b) {
                var d = this.element, c = d.is(".ui-header"), f = parseFloat(d.css(c ?
                    "top" : "bottom"));
                this.options.fullscreen || (b = b && b.type === m && b || this._thisPage || d.closest(".ui-page"), a(b).css("padding-" + (c ? "top" : "bottom"), d.outerHeight() + f))
            }, _useTransition: function (b) {
                var d = this.element, c = a.mobile.window.scrollTop(), f = d.height(), e = d.closest(".ui-page").height(), g = a.mobile.getScreenHeight(), d = d.is(":jqmData(role='header')") ? "header" : "footer";
                return!b && (this.options.transition && "none" !== this.options.transition && ("header" === d && !this.options.fullscreen && c > f || "footer" === d && !this.options.fullscreen &&
                    c + g < e - f) || this.options.fullscreen)
            }, show: function (a) {
                var d = this.element;
                this._useTransition(a) ? d.removeClass("out ui-fixed-hidden").addClass("in").animationComplete(function () {
                    d.removeClass("in")
                }) : d.removeClass("ui-fixed-hidden");
                this._visible = !0
            }, hide: function (a) {
                var d = this.element, c = "out" + ("slide" === this.options.transition ? " reverse" : "");
                this._useTransition(a) ? d.addClass(c).removeClass("in").animationComplete(function () {
                    d.addClass("ui-fixed-hidden").removeClass(c)
                }) : d.addClass("ui-fixed-hidden").removeClass(c);
                this._visible = !1
            }, toggle: function () {
                this[this._visible ? "hide" : "show"]()
            }, _bindToggleHandlers: function () {
                var b = this, d = b.options, c, f, e = !0;
                b.element.closest(".ui-page").bind("vclick",function (c) {
                    d.tapToggle && !a(c.target).closest(d.tapToggleBlacklist).length && b.toggle()
                }).bind("focusin focusout", function (g) {
                    1025 > screen.width && (a(g.target).is(d.hideDuringFocus) && !a(g.target).closest(".ui-header-fixed, .ui-footer-fixed").length) && ("focusout" !== g.type || e ? "focusin" === g.type && e && (clearTimeout(c), e = !1, f = setTimeout(function () {
                            b.hide()
                        },
                        0)) : (e = !0, clearTimeout(f), c = setTimeout(function () {
                        b.show()
                    }, 0)))
                })
            }, _destroy: function () {
                var a = this.element, d = a.is(".ui-header");
                a.closest(".ui-page").css("padding-" + (d ? "top" : "bottom"), "");
                a.removeClass("ui-header-fixed ui-footer-fixed ui-header-fullscreen ui-footer-fullscreen in out fade slidedown slideup ui-fixed-hidden");
                a.closest(".ui-page").removeClass("ui-page-header-fixed ui-page-footer-fixed ui-page-header-fullscreen ui-page-footer-fullscreen")
            }});
        a.mobile.document.bind("pagecreate create",
            function (b) {
                a(b.target).jqmData("fullscreen") && a(a.mobile.fixedtoolbar.prototype.options.initSelector, b.target).not(":jqmData(fullscreen)").jqmData("fullscreen", !0);
                a.mobile.fixedtoolbar.prototype.enhanceWithin(b.target)
            })
    })(n);
    (function (a, m) {
        a.widget("mobile.fixedtoolbar", a.mobile.fixedtoolbar, {_create: function () {
            this._super();
            this._workarounds()
        }, _workarounds: function () {
            var a = navigator.userAgent, d = navigator.platform, c = a.match(/AppleWebKit\/([0-9]+)/), c = !!c && c[1], f = null;
            if (-1 < d.indexOf("iPhone") ||
                -1 < d.indexOf("iPad") || -1 < d.indexOf("iPod"))f = "ios"; else if (-1 < a.indexOf("Android"))f = "android"; else return;
            "ios" === f ? this._bindScrollWorkaround() : "android" === f && (c && 534 > c) && (this._bindScrollWorkaround(), this._bindListThumbWorkaround())
        }, _viewportOffset: function () {
            var b = this.element, d = b.is(".ui-header"), c = Math.abs(b.offset().top - a.mobile.window.scrollTop());
            d || (c = Math.round(c - a.mobile.window.height() + b.outerHeight()) - 60);
            return c
        }, _bindScrollWorkaround: function () {
            var b = this;
            this._on(a.mobile.window,
                {scrollstop: function () {
                    2 < b._viewportOffset() && b._visible && b._triggerRedraw()
                }})
        }, _bindListThumbWorkaround: function () {
            this.element.closest(".ui-page").addClass("ui-android-2x-fixed")
        }, _triggerRedraw: function () {
            var b = parseFloat(a(".ui-page-active").css("padding-bottom"));
            a(".ui-page-active").css("padding-bottom", b + 1 + "px");
            setTimeout(function () {
                a(".ui-page-active").css("padding-bottom", b + "px")
            }, 0)
        }, destroy: function () {
            this._super();
            this.element.closest(".ui-page-active").removeClass("ui-android-2x-fix")
        }})
    })(n);
    (function (a, m) {
        a.widget("mobile.panel", a.mobile.widget, {options: {classes: {panel: "ui-panel", panelOpen: "ui-panel-open", panelClosed: "ui-panel-closed", panelFixed: "ui-panel-fixed", panelInner: "ui-panel-inner", modal: "ui-panel-dismiss", modalOpen: "ui-panel-dismiss-open", pagePanel: "ui-page-panel", pagePanelOpen: "ui-page-panel-open", contentWrap: "ui-panel-content-wrap", contentWrapOpen: "ui-panel-content-wrap-open", contentWrapClosed: "ui-panel-content-wrap-closed", contentFixedToolbar: "ui-panel-content-fixed-toolbar",
            contentFixedToolbarOpen: "ui-panel-content-fixed-toolbar-open", contentFixedToolbarClosed: "ui-panel-content-fixed-toolbar-closed", animate: "ui-panel-animate"}, animate: !0, theme: "c", position: "left", dismissible: !0, display: "reveal", initSelector: ":jqmData(role='panel')", swipeClose: !0, positionFixed: !1}, _panelID: null, _closeLink: null, _page: null, _modal: null, _panelInner: null, _wrapper: null, _fixedToolbar: null, _create: function () {
            var b = this, d = b.element, c = d.closest(":jqmData(role='page')"), f = function () {
                return"ui-body-" +
                    a.data(c[0], "mobilePage").options.theme
            };
            a.extend(this, {_panelID: d.attr("id"), _closeLink: d.find(":jqmData(rel='close')"), _page: d.closest(":jqmData(role='page')"), _pageTheme: f(), _panelInner: function () {
                var a = d.find("." + b.options.classes.panelInner);
                0 === a.length && (a = d.children().wrapAll('<div class="' + b.options.classes.panelInner + '" />').parent());
                return a
            }(), _wrapper: function () {
                var d = c.find("." + b.options.classes.contentWrap);
                0 === d.length && (d = c.children(".ui-header:not(:jqmData(position='fixed')), .ui-content:not(:jqmData(role='popup')), .ui-footer:not(:jqmData(position='fixed'))").wrapAll('<div class="' +
                    b.options.classes.contentWrap + " " + f() + '" />').parent(), a.support.cssTransform3d && b.options.animate && d.addClass(b.options.classes.animate));
                return d
            }(), _fixedToolbar: function () {
                var d = c.find("." + b.options.classes.contentFixedToolbar);
                0 === d.length && (d = c.find(".ui-header:jqmData(position='fixed'), .ui-footer:jqmData(position='fixed')").addClass(b.options.classes.contentFixedToolbar), a.support.cssTransform3d && b.options.animate && d.addClass(b.options.classes.animate));
                return d
            }()});
            b._addPanelClasses();
            b._wrapper.addClass(this.options.classes.contentWrapClosed);
            b._fixedToolbar.addClass(this.options.classes.contentFixedToolbarClosed);
            b._page.addClass(b.options.classes.pagePanel);
            a.support.cssTransform3d && b.options.animate && this.element.addClass(b.options.classes.animate);
            b._bindUpdateLayout();
            b._bindCloseEvents();
            b._bindLinkListeners();
            b._bindPageEvents();
            b.options.dismissible && b._createModal();
            b._bindSwipeEvents()
        }, _createModal: function (b) {
            var d = this;
            d._modal = a("<div class='" + d.options.classes.modal +
                "' data-panelid='" + d._panelID + "'></div>").on("mousedown",function () {
                    d.close()
                }).appendTo(this._page)
        }, _getPosDisplayClasses: function (a) {
            return a + "-position-" + this.options.position + " " + a + "-display-" + this.options.display
        }, _getPanelClasses: function () {
            var a = this.options.classes.panel + " " + this._getPosDisplayClasses(this.options.classes.panel) + " " + this.options.classes.panelClosed;
            this.options.theme && (a += " ui-body-" + this.options.theme);
            this.options.positionFixed && (a += " " + this.options.classes.panelFixed);
            return a
        }, _addPanelClasses: function () {
            this.element.addClass(this._getPanelClasses())
        }, _bindCloseEvents: function () {
            var a = this;
            a._closeLink.on("click.panel", function (d) {
                d.preventDefault();
                a.close();
                return!1
            });
            a.element.on("click.panel", "a:jqmData(ajax='false')", function (d) {
                a.close()
            })
        }, _positionPanel: function () {
            var b = this._panelInner.outerHeight(), d = b > a.mobile.getScreenHeight();
            d || !this.options.positionFixed ? (d && (this._unfixPanel(), a.mobile.resetActivePageHeight(b)), this._scrollIntoView(b)) : this._fixPanel()
        },
            _scrollIntoView: function (b) {
                b < a(q).scrollTop() && q.scrollTo(0, 0)
            }, _bindFixListener: function () {
                this._on(a(q), {throttledresize: "_positionPanel"})
            }, _unbindFixListener: function () {
                this._off(a(q), "throttledresize")
            }, _unfixPanel: function () {
                this.options.positionFixed && a.support.fixedPosition && this.element.removeClass(this.options.classes.panelFixed)
            }, _fixPanel: function () {
                this.options.positionFixed && a.support.fixedPosition && this.element.addClass(this.options.classes.panelFixed)
            }, _bindUpdateLayout: function () {
                var a =
                    this;
                a.element.on("updatelayout", function (d) {
                    a._open && a._positionPanel()
                })
            }, _bindLinkListeners: function () {
                var b = this;
                b._page.on("click.panel", "a", function (d) {
                    if (this.href.split("#")[1] === b._panelID && b._panelID !== m) {
                        d.preventDefault();
                        var c = a(this);
                        c.hasClass("ui-link") || (d = c.parent().parent(), d.hasClass("ui-li") && (c = d.parent()), c.addClass(a.mobile.activeBtnClass), b.element.one("panelopen panelclose", function () {
                            c.removeClass(a.mobile.activeBtnClass)
                        }));
                        b.toggle();
                        return!1
                    }
                })
            }, _bindSwipeEvents: function () {
                var a =
                    this, d = a._modal ? a.element.add(a._modal) : a.element;
                if (a.options.swipeClose)if ("left" === a.options.position)d.on("swipeleft.panel", function (c) {
                    a.close()
                }); else d.on("swiperight.panel", function (c) {
                    a.close()
                })
            }, _bindPageEvents: function () {
                var a = this;
                a._page.on("panelbeforeopen",function (d) {
                    a._open && d.target !== a.element[0] && a.close()
                }).on("pagehide",function (d) {
                    a._open && a.close(!0)
                }).on("keyup.panel", function (d) {
                    27 === d.keyCode && a._open && a.close()
                })
            }, _open: !1, _contentWrapOpenClasses: null, _fixedToolbarOpenClasses: null,
            _modalOpenClasses: null, open: function (b) {
                if (!this._open) {
                    var d = this, c = d.options, f = function () {
                        d._page.off("panelclose");
                        d._page.jqmData("panel", "open");
                        if (!b && a.support.cssTransform3d && c.animate)d.element.add(d._wrapper).on(d._transitionEndEvents, e); else setTimeout(e, 0);
                        d.options.theme && "overlay" !== d.options.display && d._page.removeClass(d._pageTheme).addClass("ui-body-" + d.options.theme);
                        d.element.removeClass(c.classes.panelClosed).addClass(c.classes.panelOpen);
                        d._positionPanel();
                        d.options.theme && "overlay" !==
                            d.options.display && d._wrapper.css("min-height", d._page.css("min-height"));
                        d._contentWrapOpenClasses = d._getPosDisplayClasses(c.classes.contentWrap);
                        d._wrapper.removeClass(c.classes.contentWrapClosed).addClass(d._contentWrapOpenClasses + " " + c.classes.contentWrapOpen);
                        d._fixedToolbarOpenClasses = d._getPosDisplayClasses(c.classes.contentFixedToolbar);
                        d._fixedToolbar.removeClass(c.classes.contentFixedToolbarClosed).addClass(d._fixedToolbarOpenClasses + " " + c.classes.contentFixedToolbarOpen);
                        d._modalOpenClasses =
                            d._getPosDisplayClasses(c.classes.modal) + " " + c.classes.modalOpen;
                        d._modal && d._modal.addClass(d._modalOpenClasses)
                    }, e = function () {
                        d.element.add(d._wrapper).off(d._transitionEndEvents, e);
                        d._page.addClass(c.classes.pagePanelOpen);
                        d._bindFixListener();
                        d._trigger("open")
                    };
                    0 > this.element.closest(".ui-page-active").length && (b = !0);
                    d._trigger("beforeopen");
                    if ("open" === d._page.jqmData("panel"))d._page.on("panelclose", function () {
                        f()
                    }); else f();
                    d._open = !0
                }
            }, close: function (b) {
                if (this._open) {
                    var d = this.options,
                        c = this, f = function () {
                            c.options.theme && "overlay" !== c.options.display && (c._page.removeClass("ui-body-" + c.options.theme).addClass(c._pageTheme), c._wrapper.css("min-height", ""));
                            c.element.add(c._wrapper).off(c._transitionEndEvents, f);
                            c.element.addClass(d.classes.panelClosed);
                            c._wrapper.removeClass(c._contentWrapOpenClasses).addClass(d.classes.contentWrapClosed);
                            c._fixedToolbar.removeClass(c._fixedToolbarOpenClasses).addClass(d.classes.contentFixedToolbarClosed);
                            c._fixPanel();
                            c._unbindFixListener();
                            a.mobile.resetActivePageHeight();
                            c._page.jqmRemoveData("panel");
                            c._trigger("close")
                        };
                    0 > this.element.closest(".ui-page-active").length && (b = !0);
                    c._trigger("beforeclose");
                    if (!b && a.support.cssTransform3d && d.animate)c.element.add(c._wrapper).on(c._transitionEndEvents, f); else setTimeout(f, 0);
                    c._page.removeClass(d.classes.pagePanelOpen);
                    c.element.removeClass(d.classes.panelOpen);
                    c._wrapper.removeClass(d.classes.contentWrapOpen);
                    c._fixedToolbar.removeClass(d.classes.contentFixedToolbarOpen);
                    c._modal && c._modal.removeClass(c._modalOpenClasses);
                    c._open = !1
                }
            }, toggle: function (a) {
                this[this._open ? "close" : "open"]()
            }, _transitionEndEvents: "webkitTransitionEnd oTransitionEnd otransitionend transitionend msTransitionEnd", _destroy: function () {
                var b = this.options.classes, d = this.options.theme;
                this.element.siblings("." + b.panel).length ? this._open && (this._wrapper.removeClass(b.contentWrapOpen), this._fixedToolbar.removeClass(b.contentFixedToolbarOpen), this._page.jqmRemoveData("panel"), this._page.removeClass(b.pagePanelOpen), d && this._page.removeClass("ui-body-" +
                    d).addClass(this._pageTheme)) : (this._wrapper.children().unwrap(), this._page.find("a").unbind("panelopen panelclose"), this._page.removeClass(b.pagePanel), this._open && (this._page.jqmRemoveData("panel"), this._page.removeClass(b.pagePanelOpen), d && this._page.removeClass("ui-body-" + d).addClass(this._pageTheme), a.mobile.resetActivePageHeight()));
                this._panelInner.children().unwrap();
                this.element.removeClass([this._getPanelClasses(), b.panelAnimate].join(" ")).off("swipeleft.panel swiperight.panel").off("panelbeforeopen").off("panelhide").off("keyup.panel").off("updatelayout");
                this._closeLink.off("click.panel");
                this._modal && this._modal.remove();
                this.element.off(this._transitionEndEvents).removeClass([b.panelUnfixed, b.panelClosed, b.panelOpen].join(" "))
            }});
        a(u).bind("pagecreate create", function (b) {
            a.mobile.panel.prototype.enhanceWithin(b.target)
        })
    })(n);
    (function (a, m) {
        a.widget("mobile.table", a.mobile.widget, {options: {classes: {table: "ui-table"}, initSelector: ":jqmData(role='table')"}, _create: function () {
            this.refresh(!0)
        }, refresh: function (b) {
            var d = this, c = this.element.find("thead tr");
            b && this.element.addClass(this.options.classes.table);
            d.headers = this.element.find("tr:eq(0)").children();
            d.allHeaders = d.headers.add(c.children());
            c.each(function () {
                var f = 0;
                a(this).children().each(function (e) {
                    e = parseInt(a(this).attr("colspan"), 10);
                    var g = ":nth-child(" + (f + 1) + ")";
                    a(this).jqmData("colstart", f + 1);
                    if (e)for (var h = 0; h < e - 1; h++)f++, g += ", :nth-child(" + (f + 1) + ")";
                    b === m && a(this).jqmData("cells", "");
                    a(this).jqmData("cells", d.element.find("tr").not(c.eq(0)).not(this).children(g));
                    f++
                })
            });
            b === m && this.element.trigger("refresh")
        }});
        a.mobile.document.bind("pagecreate create", function (b) {
            a.mobile.table.prototype.enhanceWithin(b.target)
        })
    })(n);
    (function (a, m) {
        a.mobile.table.prototype.options.mode = "columntoggle";
        a.mobile.table.prototype.options.columnBtnTheme = null;
        a.mobile.table.prototype.options.columnPopupTheme = null;
        a.mobile.table.prototype.options.columnBtnText = "Columns...";
        a.mobile.table.prototype.options.classes = a.extend(a.mobile.table.prototype.options.classes, {popup: "ui-table-columntoggle-popup", columnBtn: "ui-table-columntoggle-btn",
            priorityPrefix: "ui-table-priority-", columnToggleTable: "ui-table-columntoggle"});
        a.mobile.document.delegate(":jqmData(role='table')", "tablecreate refresh", function (b) {
            var d = a(this), c = d.data("mobile-table"), f = b.type, e = c.options;
            b = a.mobile.ns;
            var g = (d.attr("id") || e.classes.popup) + "-popup", h, k, l, n;
            "columntoggle" === e.mode && ("refresh" !== f && (c.element.addClass(e.classes.columnToggleTable), h = a("<a href='#" + g + "' class='" + e.classes.columnBtn + "' data-" + b + "rel='popup' data-" + b + "mini='true'>" + e.columnBtnText +
                "</a>"), k = a("<div data-" + b + "role='popup' data-" + b + "role='fieldcontain' class='" + e.classes.popup + "' id='" + g + "'></div>"), l = a("<fieldset data-" + b + "role='controlgroup'></fieldset>")), c.headers.not("td").each(function (b) {
                var c = a(this).jqmData("priority"), d = a(this).add(a(this).jqmData("cells"));
                c && (d.addClass(e.classes.priorityPrefix + c), "refresh" !== f ? a("<label><input type='checkbox' checked />" + a(this).text() + "</label>").appendTo(l).children(0).jqmData("cells", d).checkboxradio({theme: e.columnPopupTheme}) :
                    a("#" + g + " fieldset div:eq(" + b + ")").find("input").jqmData("cells", d))
            }), "refresh" !== f && l.appendTo(k), n = l === m ? a("#" + g + " fieldset") : l, "refresh" !== f && (n.on("change", "input", function (b) {
                this.checked ? a(this).jqmData("cells").removeClass("ui-table-cell-hidden").addClass("ui-table-cell-visible") : a(this).jqmData("cells").removeClass("ui-table-cell-visible").addClass("ui-table-cell-hidden")
            }), h.insertBefore(d).buttonMarkup({theme: e.columnBtnTheme}), k.insertBefore(d).popup()), c.update = function () {
                n.find("input").each(function () {
                    this.checked ?
                        (this.checked = "table-cell" === a(this).jqmData("cells").eq(0).css("display"), "refresh" === f && a(this).jqmData("cells").addClass("ui-table-cell-visible")) : a(this).jqmData("cells").addClass("ui-table-cell-hidden");
                    a(this).checkboxradio("refresh")
                })
            }, a.mobile.window.on("throttledresize", c.update), c.update())
        })
    })(n);
    (function (a, m) {
        a.mobile.table.prototype.options.mode = "reflow";
        a.mobile.table.prototype.options.classes = a.extend(a.mobile.table.prototype.options.classes, {reflowTable: "ui-table-reflow", cellLabels: "ui-table-cell-label"});
        a.mobile.document.delegate(":jqmData(role='table')", "tablecreate refresh", function (b) {
            var d = a(this);
            b = b.type;
            var d = d.data("mobile-table"), c = d.options;
            "reflow" === c.mode && ("refresh" !== b && d.element.addClass(c.classes.reflowTable), a(d.allHeaders.get().reverse()).each(function (b) {
                b = a(this).jqmData("cells");
                var d = a(this).jqmData("colstart"), g = b.not(this).filter("thead th").length && " ui-table-cell-label-top", h = a(this).text();
                if ("" !== h)if (g) {
                    var k = parseInt(a(this).attr("colspan"), 10), l = "";
                    k && (l = "td:nth-child(" +
                        k + "n + " + d + ")");
                    b.filter(l).prepend("<b class='" + c.classes.cellLabels + g + "'>" + h + "</b>")
                } else b.prepend("<b class='" + c.classes.cellLabels + "'>" + h + "</b>")
            }))
        })
    })(n);
    (function (a, m) {
        function b(a) {
            f = a.originalEvent;
            k = f.accelerationIncludingGravity;
            e = Math.abs(k.x);
            g = Math.abs(k.y);
            h = Math.abs(k.z);
            !m.orientation && (7 < e || (6 < h && 8 > g || 8 > h && 6 < g) && 5 < e) ? c.enabled && c.disable() : c.enabled || c.enable()
        }

        a.mobile.iosorientationfixEnabled = !0;
        var d = navigator.userAgent;
        if (/iPhone|iPad|iPod/.test(navigator.platform) && /OS [1-5]_[0-9_]* like Mac OS X/i.test(d) &&
            -1 < d.indexOf("AppleWebKit")) {
            var c = a.mobile.zoom, f, e, g, h, k;
            a.mobile.document.on("mobileinit", function () {
                a.mobile.iosorientationfixEnabled && a.mobile.window.bind("orientationchange.iosorientationfix", c.enable).bind("devicemotion.iosorientationfix", b)
            })
        } else a.mobile.iosorientationfixEnabled = !1
    })(n, this);
    (function (a, m, b) {
        function d() {
            c.removeClass("ui-mobile-rendering")
        }

        var c = a("html");
        a("head");
        var f = a.mobile.window;
        a(m.document).trigger("mobileinit");
        a.mobile.gradeA() && (a.mobile.ajaxBlacklist && (a.mobile.ajaxEnabled = !1), c.addClass("ui-mobile ui-mobile-rendering"), setTimeout(d, 5E3), a.extend(a.mobile, {initializePage: function () {
            var b = a.mobile.path, c = a(":jqmData(role='page'), :jqmData(role='dialog')"), h = b.stripHash(b.stripQueryParams(b.parseLocation().hash)), k = u.getElementById(h);
            c.length || (c = a("body").wrapInner("<div data-" + a.mobile.ns + "role='page'></div>").children(0));
            c.each(function () {
                var b = a(this);
                b.jqmData("url") || b.attr("data-" + a.mobile.ns + "url", b.attr("id") || location.pathname + location.search)
            });
            a.mobile.firstPage =
                c.first();
            a.mobile.pageContainer = a.mobile.firstPage.parent().addClass("ui-mobile-viewport");
            a.mobile.navreadyDeferred.resolve();
            f.trigger("pagecontainercreate");
            a.mobile.showPageLoadingMsg();
            d();
            a.mobile.hashListeningEnabled && a.mobile.path.isHashValid(location.hash) && (a(k).is(':jqmData(role="page")') || a.mobile.path.isPath(h) || h === a.mobile.dialogHashKey) ? a.event.special.navigate.isPushStateEnabled() ? (a.mobile.navigate.history.stack = [], a.mobile.navigate(a.mobile.path.isPath(location.hash) ? location.hash :
                location.href)) : f.trigger("hashchange", [!0]) : (a.mobile.path.isHashValid(location.hash) && (a.mobile.urlHistory.initialDst = h.replace("#", "")), a.event.special.navigate.isPushStateEnabled() && a.mobile.navigate.navigator.squash(b.parseLocation().href), a.mobile.changePage(a.mobile.firstPage, {transition: "none", reverse: !0, changeHash: !1, fromHashChange: !0}))
        }}), a(function () {
            m.scrollTo(0, 1);
            a.mobile.defaultHomeScroll = a.support.scrollTop && 1 !== a.mobile.window.scrollTop() ? 1 : 0;
            a.mobile.autoInitializePage && a.mobile.initializePage();
            f.load(a.mobile.silentScroll);
            a.support.cssPointerEvents || a.mobile.document.delegate(".ui-disabled", "vclick", function (a) {
                a.preventDefault();
                a.stopImmediatePropagation()
            })
        }))
    })(n, this)
});
